{
  "contractName": "ACE",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "registryOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "scalingFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "linkedTokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "canAdjustSupply",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "canConvert",
          "type": "bool"
        }
      ],
      "name": "CreateNoteRegistry",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newLatestEpoch",
          "type": "uint8"
        }
      ],
      "name": "IncrementLatestEpoch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32[6]",
          "name": "_commonReferenceString",
          "type": "bytes32[6]"
        }
      ],
      "name": "SetCommonReferenceString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "epoch",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "cryptoSystem",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "assetType",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "name": "SetFactory",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "epoch",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "category",
          "type": "uint8"
        },
        {
          "indexed": true,
          "internalType": "uint8",
          "name": "id",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "name": "SetProof",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "registryOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proxyAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newBehaviourAddress",
          "type": "address"
        }
      ],
      "name": "UpgradeNoteRegistry",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "BURN_PROOF",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "DIVIDEND_PROOF",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "JOIN_SPLIT_PROOF",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "MINT_PROOF",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRIVATE_RANGE_PROOF",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PUBLIC_RANGE_PROOF",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_linkedTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_scalingFactor",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_canAdjustSupply",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_canConvert",
          "type": "bool"
        }
      ],
      "name": "createNoteRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_linkedTokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_scalingFactor",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_canAdjustSupply",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "_canConvert",
          "type": "bool"
        },
        {
          "internalType": "uint24",
          "name": "_factoryId",
          "type": "uint24"
        }
      ],
      "name": "createNoteRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defaultCryptoSystem",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "defaultRegistryEpoch",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "disabledValidators",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_factoryId",
          "type": "uint24"
        }
      ],
      "name": "getFactoryAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "factoryAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_noteHash",
          "type": "bytes32"
        }
      ],
      "name": "getNote",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "uint40",
          "name": "createdOn",
          "type": "uint40"
        },
        {
          "internalType": "uint40",
          "name": "destroyedOn",
          "type": "uint40"
        },
        {
          "internalType": "address",
          "name": "noteOwner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryOwner",
          "type": "address"
        }
      ],
      "name": "getRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "linkedToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "scalingFactor",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "confidentialTotalMinted",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "confidentialTotalBurned",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSupplemented",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canConvert",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "canAdjustSupply",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "incrementDefaultRegistryEpoch",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "latestEpoch",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryOwner",
          "type": "address"
        }
      ],
      "name": "makeAssetAvailable",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registryOwner",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_proofHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "publicApprove",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registries",
      "outputs": [
        {
          "internalType": "contract NoteRegistryBehaviour",
          "name": "behaviour",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Mintable",
          "name": "linkedToken",
          "type": "address"
        },
        {
          "internalType": "uint24",
          "name": "latestFactory",
          "type": "uint24"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalSupplemented",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_defaultCryptoSystem",
          "type": "uint8"
        }
      ],
      "name": "setDefaultCryptoSystem",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_factoryId",
          "type": "uint24"
        },
        {
          "internalType": "address",
          "name": "_factoryAddress",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "supplementTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        },
        {
          "internalType": "bytes",
          "name": "_proofOutput",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_proofSender",
          "type": "address"
        }
      ],
      "name": "updateNoteRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_factoryId",
          "type": "uint24"
        }
      ],
      "name": "upgradeNoteRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "validatedProofs",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "validators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        },
        {
          "internalType": "bytes",
          "name": "_proofData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_proofSender",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        },
        {
          "internalType": "bytes",
          "name": "_proofData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "_proofSender",
          "type": "address"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "validateProof",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        },
        {
          "internalType": "bytes32[]",
          "name": "_proofHashes",
          "type": "bytes32[]"
        }
      ],
      "name": "clearProofByHashes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32[6]",
          "name": "_commonReferenceString",
          "type": "bytes32[6]"
        }
      ],
      "name": "setCommonReferenceString",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        }
      ],
      "name": "invalidateProof",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        },
        {
          "internalType": "bytes32",
          "name": "_proofHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        }
      ],
      "name": "validateProofByHash",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        },
        {
          "internalType": "address",
          "name": "_validatorAddress",
          "type": "address"
        }
      ],
      "name": "setProof",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "incrementLatestEpoch",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCommonReferenceString",
      "outputs": [
        {
          "internalType": "bytes32[6]",
          "name": "",
          "type": "bytes32[6]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint24",
          "name": "_proof",
          "type": "uint24"
        }
      ],
      "name": "getValidatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "validatorAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registryOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"scalingFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"linkedTokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canAdjustSupply\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"canConvert\",\"type\":\"bool\"}],\"name\":\"CreateNoteRegistry\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newLatestEpoch\",\"type\":\"uint8\"}],\"name\":\"IncrementLatestEpoch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[6]\",\"name\":\"_commonReferenceString\",\"type\":\"bytes32[6]\"}],\"name\":\"SetCommonReferenceString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"epoch\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"cryptoSystem\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"assetType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"name\":\"SetFactory\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"epoch\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"}],\"name\":\"SetProof\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"registryOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newBehaviourAddress\",\"type\":\"address\"}],\"name\":\"UpgradeNoteRegistry\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"BURN_PROOF\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DIVIDEND_PROOF\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JOIN_SPLIT_PROOF\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"MINT_PROOF\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRIVATE_RANGE_PROOF\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PUBLIC_RANGE_PROOF\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"},{\"internalType\":\"bytes\",\"name\":\"_proofData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_proofSender\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"},{\"internalType\":\"bytes32[]\",\"name\":\"_proofHashes\",\"type\":\"bytes32[]\"}],\"name\":\"clearProofByHashes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_linkedTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_scalingFactor\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_canAdjustSupply\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_canConvert\",\"type\":\"bool\"}],\"name\":\"createNoteRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_linkedTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_scalingFactor\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_canAdjustSupply\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_canConvert\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"_factoryId\",\"type\":\"uint24\"}],\"name\":\"createNoteRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultCryptoSystem\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"defaultRegistryEpoch\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"disabledValidators\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCommonReferenceString\",\"outputs\":[{\"internalType\":\"bytes32[6]\",\"name\":\"\",\"type\":\"bytes32[6]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_factoryId\",\"type\":\"uint24\"}],\"name\":\"getFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"factoryAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_noteHash\",\"type\":\"bytes32\"}],\"name\":\"getNote\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint40\",\"name\":\"createdOn\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"destroyedOn\",\"type\":\"uint40\"},{\"internalType\":\"address\",\"name\":\"noteOwner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryOwner\",\"type\":\"address\"}],\"name\":\"getRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"linkedToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"scalingFactor\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"confidentialTotalMinted\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"confidentialTotalBurned\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplemented\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canConvert\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"canAdjustSupply\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"}],\"name\":\"getValidatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"validatorAddress\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"incrementDefaultRegistryEpoch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"incrementLatestEpoch\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"}],\"name\":\"invalidateProof\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"latestEpoch\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryOwner\",\"type\":\"address\"}],\"name\":\"makeAssetAvailable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"},{\"internalType\":\"bytes\",\"name\":\"_proofData\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_proofSender\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registryOwner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"publicApprove\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registries\",\"outputs\":[{\"internalType\":\"contract NoteRegistryBehaviour\",\"name\":\"behaviour\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Mintable\",\"name\":\"linkedToken\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"latestFactory\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplemented\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32[6]\",\"name\":\"_commonReferenceString\",\"type\":\"bytes32[6]\"}],\"name\":\"setCommonReferenceString\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_defaultCryptoSystem\",\"type\":\"uint8\"}],\"name\":\"setDefaultCryptoSystem\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_factoryId\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"_factoryAddress\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"_validatorAddress\",\"type\":\"address\"}],\"name\":\"setProof\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"supplementTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"},{\"internalType\":\"bytes\",\"name\":\"_proofOutput\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"_proofSender\",\"type\":\"address\"}],\"name\":\"updateNoteRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_factoryId\",\"type\":\"uint24\"}],\"name\":\"upgradeNoteRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"validateProof\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_proof\",\"type\":\"uint24\"},{\"internalType\":\"bytes32\",\"name\":\"_proofHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"}],\"name\":\"validateProofByHash\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"validatedProofs\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"validators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"AZTEC\",\"details\":\"ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables     digital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.  * Copyright 2020 Spilsbury Holdings Ltd  * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \\\"License\\\"); you may not use this file except in compliance with the License. * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details. * You should have received a copy of the GNU Lesser General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.*\",\"methods\":{\"burn(uint24,bytes,address)\":{\"details\":\"Burn AZTEC notes\",\"params\":{\"_proof\":\"the AZTEC proof object\",\"_proofData\":\"the burn proof construction data\",\"_proofSender\":\"the Ethereum address of the original transaction sender. It is explicitly assumed that       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running Unnamed param is the AZTEC zero-knowledge proof data\"},\"return\":\"two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the notes that were created. Returned so that a zkAsset can emit the appropriate events\"},\"clearProofByHashes(uint24,bytes32[])\":{\"details\":\"Clear storage variables set when validating zero-knowledge proofs.     The only address that can clear data from `validatedProofs` is the address that created the proof.     Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)     to reduce gas costs. It is highly likely that any storage variables set by `validateProof`     are only required for the duration of a single transaction.     E.g. a decentralized exchange validating a swap proof and sending transfer instructions to     two confidential assets.     This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`\",\"params\":{\"_proof\":\"the AZTEC proof object\",\"_proofHashes\":\"dynamic array of proof hashes\"}},\"constructor\":{\"details\":\"contract constructor. Sets the owner of ACE*\"},\"createNoteRegistry(address,uint256,bool,bool)\":{\"details\":\"Default noteRegistry creation method. Doesn't take the id of the factory to use, but generates it based on defaults and on the passed flags.\",\"params\":{\"_canAdjustSupply\":\"- whether the noteRegistry can make use of minting and burning\",\"_canConvert\":\"- whether the noteRegistry can transfer value from private to public representation and vice versa\",\"_linkedTokenAddress\":\"- address of any erc20 linked token (can not be 0x0 if canConvert is true)\",\"_scalingFactor\":\"- defines the number of tokens that an AZTEC note value of 1 maps to.\"}},\"createNoteRegistry(address,uint256,bool,bool,uint24)\":{\"details\":\"NoteRegistry creation method. Takes an id of the factory to use.\",\"params\":{\"_canAdjustSupply\":\"- whether the noteRegistry can make use of minting and burning\",\"_canConvert\":\"- whether the noteRegistry can transfer value from private to public representation and vice versa\",\"_factoryId\":\"- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)\",\"_linkedTokenAddress\":\"- address of any erc20 linked token (can not be 0x0 if canConvert is true)\",\"_scalingFactor\":\"- defines the number of tokens that an AZTEC note value of 1 maps to.\"}},\"getCommonReferenceString()\":{\"details\":\"Returns the common reference string. We use a custom getter for `commonReferenceString` - the default getter created by making the storage variable public indexes individual elements of the array, and we want to return the whole array\"},\"getFactoryAddress(uint24)\":{\"details\":\"Get the factory address associated with a particular factoryId. Fail if resulting address is 0x0.\",\"params\":{\"_factoryId\":\"- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)\"}},\"getNote(address,bytes32)\":{\"details\":\"Returns the note for a given address and note hash.\",\"params\":{\"_noteHash\":\"- keccak256 hash of the note coordiantes (gamma and sigma)\",\"_registryOwner\":\"- address of the registry owner\"},\"return\":\"status - status of the note, details whether the note is in a note registry or has been destroyedcreatedOn - time the note was createddestroyedOn - time the note was destroyednoteOwner - address of the note owner\"},\"getRegistry(address)\":{\"details\":\"Returns the registry for a given address.\",\"params\":{\"_registryOwner\":\"- address of the registry owner in question\"},\"return\":\"linkedTokenAddress - public ERC20 token that is linked to the NoteRegistry. This is used to transfer public value into and out of the systemscalingFactor - defines how many ERC20 tokens are represented by one AZTEC notetotalSupply - represents the total current supply of public tokens associated with a particular registryconfidentialTotalMinted - keccak256 hash of the note representing the total minted supplyconfidentialTotalBurned - keccak256 hash of the note representing the total burned supplycanConvert - flag set by the owner to decide whether the registry has public to private, and vice versa, conversion privilegecanAdjustSupply - determines whether the registry has minting and burning privileges\"},\"getValidatorAddress(uint24)\":{\"details\":\"Get the address of the relevant validator contract\",\"params\":{\"_proof\":\"unique identifier of a particular proof\"},\"return\":\"validatorAddress - the address of the validator contract\"},\"incrementDefaultRegistryEpoch()\":{\"details\":\"Increment the default registry epoch\"},\"incrementLatestEpoch()\":{\"details\":\"Increments the `latestEpoch` storage variable.\"},\"invalidateProof(uint24)\":{\"details\":\"Forever invalidate the given proof.\",\"params\":{\"_proof\":\"the AZTEC proof object\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"makeAssetAvailable(address)\":{\"details\":\"used for slow release, useless afterwards.\"},\"mint(uint24,bytes,address)\":{\"details\":\"Mint AZTEC notes\",\"params\":{\"_proof\":\"the AZTEC proof object\",\"_proofData\":\"the mint proof construction data\",\"_proofSender\":\"the Ethereum address of the original transaction sender. It is explicitly assumed that       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running Unnamed param is the AZTEC zero-knowledge proof data\"},\"return\":\"two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the notes that were created. Returned so that a zkAsset can emit the appropriate events\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"publicApprove(address,bytes32,uint256)\":{\"details\":\"Adds a public approval record to the noteRegistry, for use by ACE when it needs to transfer public tokens it holds to an external address. It needs to be associated with the hash of a proof.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCommonReferenceString(bytes32[6])\":{\"details\":\"Set the common reference string.     If the trusted setup is re-run, we will need to be able to change the crs\",\"params\":{\"_commonReferenceString\":\"the new commonReferenceString\"}},\"setDefaultCryptoSystem(uint8)\":{\"details\":\"Set the default crypto system to be used\",\"params\":{\"_defaultCryptoSystem\":\"- default crypto system identifier\"}},\"setFactory(uint24,address)\":{\"details\":\"Register a new Factory, iff no factory for that ID exists. The epoch of any new factory must be at least as big as the default registry epoch. Each asset type for each cryptosystem for each epoch should have a note registry\",\"params\":{\"_factoryAddress\":\"- address of the deployed factory\",\"_factoryId\":\"- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)\"}},\"setProof(uint24,address)\":{\"details\":\"Adds or modifies a proof into the Cryptography Engine.      This method links a given `_proof` to a smart contract validator.\",\"params\":{\"_proof\":\"the AZTEC proof object\",\"_validatorAddress\":\"the address of the smart contract validator\"}},\"supplementTokens(uint256)\":{\"details\":\"called when a mintable and convertible asset wants to perform an action which puts the zero-knowledge and public balance out of balance. For example, if minting in zero-knowledge, some public tokens need to be added to the pool managed by ACE, otherwise any private->public conversion runs the risk of not having any public tokens to send.\",\"params\":{\"_value\":\"the value to be added\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateNoteRegistry(uint24,bytes,address)\":{\"details\":\"Update the state of the note registry according to transfer instructions issued by a zero-knowledge proof. This method will verify that the relevant proof has been validated, make sure the same proof has can't be re-used, and it then delegates to the relevant noteRegistry.\",\"params\":{\"_proof\":\"- unique identifier for a proof\",\"_proofOutput\":\"- transfer instructions issued by a zero-knowledge proof\",\"_proofSender\":\"- address of the entity sending the proof\"}},\"upgradeNoteRegistry(uint24)\":{\"details\":\"Method to upgrade the registry linked with the msg.sender to a new factory, based on _factoryId. The submitted _factoryId must be of epoch equal or greater than previous _factoryId, and of the same assetType.\",\"params\":{\"_factoryId\":\"- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)\"}},\"validateProof(uint24,address,bytes)\":{\"details\":\"Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract     linked to `_proof`. The validator smart contract will have the following interface:    *      function validate(         bytes _proofData,         address _sender,         bytes32[6] _commonReferenceString     ) public returns (bytes)\",\"params\":{\"_proof\":\"the AZTEC proof object\",\"_sender\":\"the Ethereum address of the original transaction sender. It is explicitly assumed that       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running Unnamed param is the AZTEC zero-knowledge proof data\"},\"return\":\"a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard\"},\"validateProofByHash(uint24,bytes32,address)\":{\"details\":\"Validate a previously validated AZTEC proof via its hash     This enables confidential assets to receive transfer instructions from a dApp that     has already validated an AZTEC proof that satisfies a balancing relationship.\",\"params\":{\"_proof\":\"the AZTEC proof object\",\"_proofHash\":\"the hash of the `proofOutput` received by the asset\",\"_sender\":\"the Ethereum address of the contract issuing the transfer instruction\"},\"return\":\"a boolean that signifies whether the corresponding AZTEC proof has been validated\"}},\"title\":\"The AZTEC Cryptography Engine\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@aztec/protocol/contracts/ACE/ACE.sol\":\"ACE\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@aztec/protocol/contracts/ACE/ACE.sol\":{\"keccak256\":\"0x3fdc38bbda962d17ba55de9253009ca6a51601e9df2f2328c208db834a0b373c\",\"urls\":[\"bzz-raw://71e1e4eabf1aa8049f6f3b6302eaa282af3e2b81bbce5ab8e73d001aa44ffcb5\",\"dweb:/ipfs/QmeH1CebW5qoHqTuYwWbLHrrmY2hpEt8FbZw2HrhGwVhs1\"]},\"@aztec/protocol/contracts/ACE/noteRegistry/NoteRegistryManager.sol\":{\"keccak256\":\"0x608455b77cf8782c582d20595f277ee5934dd9840eb8bc82b8c311b556202f9b\",\"urls\":[\"bzz-raw://d1ad6e46230ee9034040186a727f078fa142e138c2e850d750d6d5b95129f3e7\",\"dweb:/ipfs/QmWbnvrr1GbWnu1yPEwX3YW3JJ5fND6L3PHW3fmos98Z4d\"]},\"@aztec/protocol/contracts/ACE/noteRegistry/interfaces/NoteRegistryBehaviour.sol\":{\"keccak256\":\"0xd0be6c7b5646bc8796c32fc0dedd33f3bdc48a70ac7fec536079518230b72d88\",\"urls\":[\"bzz-raw://6706782dcbefcb8030f05974048aad1b790abb387ce84e325de5f20b5d90a1a2\",\"dweb:/ipfs/QmfJujA3bfBcAG5mQ7JhgrmDULKPbfDDREsgz2Jn9Wh9cZ\"]},\"@aztec/protocol/contracts/ACE/noteRegistry/interfaces/NoteRegistryFactory.sol\":{\"keccak256\":\"0x710346a8d816330322049bcd0c93fa4b241b8f165229394d509c31ef9aa35adc\",\"urls\":[\"bzz-raw://34a6435f00de0dc9aeac99c4f71d4da6cc8d43463d18762950bb75a6aa72ee07\",\"dweb:/ipfs/QmSb3NPyN3HGRCsDMvQYqGWTqvvdZGho6yExLYKibQwWUc\"]},\"@aztec/protocol/contracts/Proxies/AdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xb5e548f105c6601ed7e943752864b5c76f4ab25b5e4be865542b638612479f73\",\"urls\":[\"bzz-raw://efc14e6cea06996131b3b4e8b48f920512796de03dea0927f05d2ff7a351bfeb\",\"dweb:/ipfs/QmWwkve1BFRzYcGA4ezXg4kf9AsFGyRqGVmk1UtBR7iUNr\"]},\"@aztec/protocol/contracts/Proxies/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0xbae4c9d71649131352df80342baba6d41827fd838c9cfc82034015d483c6b22e\",\"urls\":[\"bzz-raw://15379d18ece15d6ab079e9f5cebef121a87eff67d78400aad65242f54ebac7fb\",\"dweb:/ipfs/QmbQMyZawtySrnXCg1SimeFVJDgUUPBJFEZ12rnUbebcwJ\"]},\"@aztec/protocol/contracts/Proxies/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0x589e802a4e6d5e25ca9cabafa59689cd93a040282b1365896624b3b7c056aa46\",\"urls\":[\"bzz-raw://460dc8e7d20d982194e3b47127987f7feefb0412e3753a9dfcee30793c5cc1f3\",\"dweb:/ipfs/QmfWfWJe1HTt6YT3B1zm6BwFhG69jKCLVQvvB4xeDjauiK\"]},\"@aztec/protocol/contracts/Proxies/Proxy.sol\":{\"keccak256\":\"0x26604c0c793b2ba5e43fc286b08c5dc44134382070cae7c00320569e6eebb00f\",\"urls\":[\"bzz-raw://335cddd262c1946505ea8be4ea3063e10311f5bb03e02186e56b15ffdb69a07d\",\"dweb:/ipfs/QmUWUZSkZAMbgENFEaWpfdTfohRj1xBuoztbwZbr4cpq8Y\"]},\"@aztec/protocol/contracts/Proxies/UpgradeabilityProxy.sol\":{\"keccak256\":\"0xcae491a455d3b9589230ec1a89995de20774348417434fbf03eae3808f6871c8\",\"urls\":[\"bzz-raw://d9477f25b47183ec275887b9f7e66f75f85f31a9a62de1efb731eaddaf380eef\",\"dweb:/ipfs/QmaRfCJGqNzWQ72ZxQXkXeTURDy8nJBzb6ujASBP8S1pKh\"]},\"@aztec/protocol/contracts/interfaces/IAZTEC.sol\":{\"keccak256\":\"0x4b6c78ca2bfb273a598a733a6615e71e65d42fa8d16ca0a9a4fab67e50694f7a\",\"urls\":[\"bzz-raw://a980b158fb7a6627ba05b7e9065a6949a10db9016e18f487a6835d401a405958\",\"dweb:/ipfs/QmScpcDZHdGzfs6Meu1LR3M5qCbxNPxfEhVZs7owk7v9QU\"]},\"@aztec/protocol/contracts/interfaces/IERC20Mintable.sol\":{\"keccak256\":\"0x7d7f8652b6dcb20b8be054607d7001cc37a419f11eb0ce6f70b2b78d2cd1fa24\",\"urls\":[\"bzz-raw://9ed244f29c73b2addf0d020e3dd7b078213705d31fc3cd24a21709178c88018a\",\"dweb:/ipfs/QmeeXBPAH9HeaUds2NCo3tB6GSxarYsWZKejrCeN4aJpm3\"]},\"@aztec/protocol/contracts/interfaces/ProxyAdmin.sol\":{\"keccak256\":\"0xecaaf23385bd3d4b4a3bb1c01cb8c95ad3a2eabf0ad1e205c6b059503fab1326\",\"urls\":[\"bzz-raw://1059318da874f2e197430c9f1e16a385d0504b2cae3e2ffa20000f13daf159fe\",\"dweb:/ipfs/QmZs4R8ihhXfdqfbyUquMWRVHdkR7jNC77LXKeDSAfcYoR\"]},\"@aztec/protocol/contracts/libs/NoteUtils.sol\":{\"keccak256\":\"0xe1f4cb0e01304169106f6114a4044eabfde25beaf4f8b2362823391a55474548\",\"urls\":[\"bzz-raw://a5a45ce057e7c30e82f2dcb3af8c9b61a5ff6e4092430c36958698b8ff5c5df1\",\"dweb:/ipfs/QmeCW5rErow3E153DBAdM5SrpS6EiF62c52iD3m6Mtk5zj\"]},\"@aztec/protocol/contracts/libs/ProofUtils.sol\":{\"keccak256\":\"0xd4a54fd4d28ae3ad84b8970c2b88398661d6c379cdabaac5e2d27337acba19ff\",\"urls\":[\"bzz-raw://ce53cd8592b739ee9d50009c3c8f762cbebfdef3f27ccc6397463d3be94cf650\",\"dweb:/ipfs/QmQok9trFyJdM2iDMKC5WtmCGdCETNZhrooaDaR6CLxSqH\"]},\"@aztec/protocol/contracts/libs/SafeMath8.sol\":{\"keccak256\":\"0x42879ebd1a00fcec905ce8030509827e886ef4f076debbd59da82751663eeba9\",\"urls\":[\"bzz-raw://e5d79c0c36584c0b5fb3430d91bee35625df995c2b6ea1a013b19f29a513e625\",\"dweb:/ipfs/QmWoFytXA9sJ9zSHV28ZVK8JvJok2bMJSHXHu2xABRKdcc\"]},\"@aztec/protocol/contracts/libs/VersioningUtils.sol\":{\"keccak256\":\"0x4c01443b87571701902f5162901f57de7b4f08ddad8993083eb5ae9660fc7438\",\"urls\":[\"bzz-raw://e780ecdac3d971fa7e7982d76da6e5a745cc20f8122602414892085ee4d628f1\",\"dweb:/ipfs/QmeDejLSNvGL2C59TXNoHunejNFKRxbm9pzpij1Xte1eKU\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb15af804e2bc97db51e4e103f13de9fe13f87e6b835d7a88c897966c0e58506e\",\"urls\":[\"bzz-raw://1e8cff8437557fc915a3bed968fcd8f2df9809599e665ef69c2c9ce628548055\",\"dweb:/ipfs/QmP5spYP8vs2jvLF8zNrXUbqB79hMsoEvMHiLcBxerWKcm\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "1290:18220:3:-;;;2915:1:4;2879:37;;;;;;;;;;;;;;;;;;;;2957:1;2922:36;;;;;;;;;;;;;;;;;;;;2439:1:3;2412:28;;;;;;;;;;;;;;;;;;;;2518:33;8:9:-1;5:2;;;30:1;27;20:12;5:2;2518:33:3;698:17:50;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;1290:18220:3;;788:96:48;833:15;867:10;860:17;;788:96;:::o;1290:18220:3:-;;;;;;;",
  "deployedSourceMap": "1290:18220:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1290:18220:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:47:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1665:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4721:1648:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4721:1648:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3082:122;;;:::i;:::-;;21477:187;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21477:187:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;3346:136;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3346:136:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;2879:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10219:591:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10219:591:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;10219:591:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10219:591:3;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;10219:591:3;;;;;;;;;;;;:::i;:::-;;6849:803:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6849:803:4;;;;;;;;;;;;;;;;;:::i;:::-;;2300:53:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2300:53:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1492:50:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;15998:657:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15998:657:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2132:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2132:48:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11026:291;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;11026:291:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11026:291:3;;;;;;;;;;;;;;:::i;:::-;;1684:137:50;;;:::i;:::-;;3208:769:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3208:769:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3208:769:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3208:769:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3208:769:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3208:769:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1833:45:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12642:1186:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12642:1186:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;899:77:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1172:41:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12371:3344:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12371:3344:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16127:1043:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16127:1043:4;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16127:1043:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16127:1043:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16127:1043:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16127:1043:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2412:28:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6255:3109;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6255:3109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6255:3109:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6255:3109:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6255:3109:3;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;6255:3109:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8948:544:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8948:544:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2922:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16736:210:3;;;:::i;:::-;;10129:2157:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;10129:2157:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2965:47;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2965:47:4;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;11428:365:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11428:365:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;2589:50:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2589:50:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4634:767:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4634:767:3;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;4634:767:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4634:767:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;4634:767:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4634:767:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17225:121;;;:::i;:::-;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;17225:121:3;;;;;;;;;;;;;;;;1332:41:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;17401:326:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17401:326:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17566:1942:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17566:1942:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1970:107:50;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:50;;;;;;;;;;;;;;;;;;;:::i;:::-;;3946:536:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3946:536:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;18726:769;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18726:769:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20022:318;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20022:318:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1006:47:35;1048:5;1006:47;:::o;1665:49::-;1709:5;1665:49;:::o;4721:1648:4:-;4788:22;4822:17;6041:14;6029:10;6025:31;6019:38;6001:56;;6094:14;6087:22;6071:38;;6244:12;6240:123;;;6306:3;6280:30;;:14;:30;;;;6272:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6240:123;4721:1648;;;;:::o;3082:122::-;1103:9:50;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:1:4;3173:20;;;;;;;;;;;:24;3150:20;;:47;;;;;;;;;;;;;;;;;;3082:122::o;21477:187::-;1103:9:50;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21556:28:4;;:::i;:::-;21587:10;:26;21598:14;21587:26;;;;;;;;;;;;;;;21556:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21623:8;:18;;;:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21623:34:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21623:34:4;;;;1159:1:50;21477:187:4;:::o;3346:136::-;1103:9:50;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3455:20:4;3433:19;;:42;;;;;;;;;;;;;;;;;;3346:136;:::o;2879:37::-;;;;;;;;;;;;;:::o;10219:591:3:-;10314:14;10331:12;;:19;;10314:36;;10365:9;10377:1;10365:13;;10360:444;10384:6;10380:1;:10;10360:444;;;10414:17;10434:12;;10447:1;10434:15;;;;;;;;;;;;;10414:35;;10492:3;10484:12;;10471:9;:25;;10463:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10543:26;10593:9;10604:6;10612:10;10582:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;10582:41:3;;;10572:52;;;;;;10543:81;;10685:4;10646:43;;:15;:35;10662:18;10646:35;;;;;;;;;;;;;;;;;;;;;:43;;;10638:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10788:5;10750:15;:35;10766:18;10750:35;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;10360:444;;10397:1;10392:6;;;;10360:444;;;;10219:591;;;;:::o;6849:803:4:-;6910:29;6942:10;:22;6953:10;6942:22;;;;;;;;;;;;;;;6910:54;;7021:3;6982:43;;6990:8;:18;;;;;;;;;;;;6982:43;;;;6974:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:32;7116:6;7091:8;:20;;;:24;;:32;;;;:::i;:::-;7068:8;:20;;:55;;;;7162:38;7193:6;7162:8;:26;;;:30;;:38;;;;:::i;:::-;7133:8;:26;;:67;;;;7224:21;7274:15;7303:20;7336:8;:18;;;;;;;;;;;;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7336:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7336:32:4;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7336:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7210:158;;;;;;;;7400:4;7386:18;;:10;:18;;;7378:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7491:4;7472:23;;:15;:23;;;7464:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7558:8;:20;;;;;;;;;;;;:33;;;7592:10;7612:4;7619:25;7630:13;7619:6;:10;;:25;;;;:::i;:::-;7558:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7558:87:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7558:87:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7558:87:4;;;;;;;;;;;;;;;;;6849:803;;;;;:::o;2300:53:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1492:50:35:-;1537:5;1492:50;:::o;15998:657:3:-;16105:9;:7;:9::i;:::-;16097:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16196:3;16167:33;;:17;:33;;;;16159:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16255:11;16268:14;16284:8;16296:27;:6;:25;;;:27::i;:::-;16254:69;;;;;;16350:11;;;;;;;;;;;16341:20;;:5;:20;;;;16333:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16481:3;16438:47;;:10;16449:5;16438:17;;;;;;;;;;;;16456:8;16438:27;;;;;;;;;;;;16466:2;16438:31;;;;;;;;;;;;;;;;;;;;:47;;;16430:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16568:17;16534:10;16545:5;16534:17;;;;;;;;;;;;16552:8;16534:27;;;;;;;;;;;;16562:2;16534:31;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;16626:2;16600:48;;16616:8;16600:48;;16609:5;16600:48;;;16630:17;16600:48;;;;;;;;;;;;;;;;;;;;;;15998:657;;;;;:::o;2132:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11026:291::-;11127:9;:7;:9::i;:::-;11119:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11225:22;11201:21;:46;;;;;;;:::i;:::-;;11262:48;11287:22;11262:48;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11262:48:3;;;;;;;;;;;;;;;;11026:291;:::o;1684:137:50:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;3208:769:3:-;3334:12;3359:28;;:::i;:::-;3390:10;:22;3401:10;3390:22;;;;;;;;;;;;;;;3359:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3469:3;3430:43;;3438:8;:18;;;3430:43;;;;3422:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3586:14;3606:27;:6;:25;;;:27::i;:::-;3583:50;;;;3670:18;3664:25;;;;;;;;3652:37;;:8;:37;;;3644:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3729:26;3758:4;:18;;;3777:6;3785:12;3799:10;;3758:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;3758:52:3;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3758:52:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3758:52:3;;;;;;39:16:-1;36:1;17:17;2:54;3758:52:3;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3758:52:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;3758:52:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3758:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3729:81;;3856:1;3828:25;:13;:23;:25::i;:::-;:29;3820:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3901:8;:18;;;:23;;;3925:13;3901:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3901:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3901:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3901:38:3;;;;3956:13;3949:21;;;;;3208:769;;;;;;:::o;1833:45:35:-;1873:5;1833:45;:::o;12642:1186:4:-;12721:29;12753:10;:22;12764:10;12753:22;;;;;;;;;;;;;;;12721:54;;12832:3;12793:43;;12801:8;:18;;;;;;;;;;;;12793:43;;;;12785:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12891:11;12905:15;12924:33;:10;:31;;;:33::i;:::-;12890:67;;;;;12967:19;12989:8;:22;;;;;;;;;;;;12967:44;;13022:14;13039:18;13061:35;:12;:33;;;:35::i;:::-;13021:75;;;;;13123:8;13114:17;;:5;:17;;;;13106:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13243:12;13230:25;;:9;:25;;;13222:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13329:15;13347:29;13365:10;13347:17;:29::i;:::-;13329:47;;13386:20;13429:7;13409:55;;;:57;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13409:57:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13409:57:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13409:57:4;;;;;;;;;;;;;;;;13386:80;;13477:18;13498:31;13516:12;13498:17;:31::i;:::-;13477:52;;13564:10;13539:8;:22;;;:35;;;;;;;;;;;;;;;;;;13605:10;13585:49;;;13643:8;:18;;;;;;;;;;;;13664:12;13678:7;13585:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13585:101:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13585:101:4;;;;13701:120;13734:10;13766:8;:18;;;;;;;;;;;;13799:12;13701:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12642:1186;;;;;;;;;;:::o;899:77:50:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1172:41:35:-;1208:5;1172:41;:::o;12371:3344:3:-;12503:4;13005:26;13041:24;15039:23;15030:6;15027:1;15023:14;15019:44;15013:51;14964:4;14956:6;14952:17;14922:4;14893:98;14868:214;14829:253;;15334:4;15328:11;15365:10;15359:4;15352:24;15402:6;15396:4;15389:20;15435:7;15429:4;15422:21;15494:4;15488;15478:21;15456:43;;15525:6;15519:4;15512:20;13084:2493;15617:5;15594:28;;:19;:28;;;15586:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15673:15;:35;15689:18;15673:35;;;;;;;;;;;;;;;;;;;;;15666:42;;;;12371:3344;;;;;:::o;1250:92:50:-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;16127:1043:4:-;16266:28;;:::i;:::-;16297:10;:22;16308:10;16297:22;;;;;;;;;;;;;;;16266:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16376:3;16337:43;;16345:8;:18;;;16337:43;;;;16329:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16423:17;16453:12;16443:23;;;;;;16423:43;;16476:26;16526:9;16537:6;16545:10;16515:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;16515:41:4;;;16505:52;;;;;;16476:81;;16645:4;16589:60;;:52;16609:6;16617:9;16628:12;16589:19;:52::i;:::-;:60;;;16568:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16847:5;16809:15;:35;16825:18;16809:35;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;16877:19;16910:21;16945:18;16976:8;:18;;;:37;;;17014:6;17022:12;16976:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16976:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16976:59:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16976:59:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16976:59:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16863:172;;;;;;17064:1;17049:11;:16;17045:119;;17081:72;17102:11;17115:13;17130:11;17143:9;17081:20;:72::i;:::-;17045:119;16127:1043;;;;;;;;;:::o;2412:28:3:-;;;;;;;;;;;;;:::o;6255:3109::-;6344:12;6386:1;6376:6;:11;;;;6368:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6573:24;6600:27;6620:6;6600:19;:27::i;:::-;6573:54;;6637:25;6845:4;6832:18;6826:4;6822:29;6942:4;6936:11;6986:5;6979:4;6971:6;6967:17;6960:32;7098:7;7091:4;7083:6;7079:17;7072:34;7151:26;7145:33;7138:4;7130:6;7126:17;7119:60;7234:26;7228:4;7224:37;7218:44;7211:4;7203:6;7199:17;7192:71;7318:26;7312:4;7308:37;7302:44;7295:4;7287:6;7283:17;7276:71;7402:26;7396:4;7392:37;7386:44;7379:4;7371:6;7367:17;7360:71;7486:26;7480:4;7476:37;7470:44;7463:4;7455:6;7451:17;7444:71;7570:26;7564:4;7560:37;7554:44;7547:4;7539:6;7535:17;7528:71;7733:5;7725:6;7721:18;7917:4;7897:17;7884:31;7880:42;8063:13;8044:17;8031:11;8018:59;8207:5;8192:13;8188:25;8291:4;8285;8275:8;8267:6;8249:16;8244:3;8233:63;8314:1;8309:115;;;;8226:198;;8309:115;8347:3;8341:4;8334:17;8365:4;8359;8352:18;8226:198;;8508:14;8502:4;8494:6;8479:44;8610:14;8602:6;8598:27;8592:4;8585:41;8785:6;8779:13;8771:6;8767:26;8751:42;;6681:2122;;;;;8943:22;8937:29;;;;;;;;8911:55;;8928:4;8923:1;8913:6;:11;;;;8912:20;8911:55;;;8907:422;;;8982:14;8999:24;:12;:22;:24::i;:::-;8982:41;;9042:9;9054:1;9042:13;;9037:282;9061:6;9057:1;:10;9037:282;;;9095:17;9125:19;9142:1;9125:12;:16;;:19;;;;:::i;:::-;9115:30;;;;;;9095:50;;9163:26;9213:9;9224:6;9232:10;9202:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;9202:41:3;;;9192:52;;;;;;9163:81;;9300:4;9262:15;:35;9278:18;9262:35;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;9037:282;;9074:1;9069:6;;;;9037:282;;;;8907:422;;9345:12;9338:19;;;;6255:3109;;;;;;:::o;8948:544:4:-;9125:15;9143:52;9165:11;9178:16;9143:21;:52::i;:::-;9125:70;;9206:16;9225:82;9254:20;;;;;;;;;;;9276:19;;;;;;;;;;;9297:9;9225:28;:82::i;:::-;9206:101;;9318:167;9350:19;9383:14;9411:16;9441:11;9466:9;9318:18;:167::i;:::-;8948:544;;;;;;:::o;2922:36::-;;;;;;;;;;;;;:::o;16736:210:3:-;16793:9;:7;:9::i;:::-;16785:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16873:18;16889:1;16873:11;;;;;;;;;;;:15;;;;:18;;;;:::i;:::-;16859:11;;:32;;;;;;;;;;;;;;;;;;16906:33;16927:11;;;;;;;;;;;16906:33;;;;;;;;;;;;;;;;;;;;;;16736:210::o;10129:2157:4:-;10394:3;10341:57;;10349:10;:22;10360:10;10349:22;;;;;;;;;;;;;;;:32;;;;;;;;;;;;10341:57;;;10333:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10471:11;10467:132;;;10537:3;10506:35;;:19;:35;;;;10498:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10467:132;10612:15;10631:33;:10;:31;;;:33::i;:::-;10608:56;;;;10967:19;10989:52;11011:11;11024:16;10989:21;:52::i;:::-;10967:74;;11083:1;11060:25;;:13;:25;;;;11051:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11189:9;11172:26;;:13;:26;;;11163:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11251:15;11269:29;11287:10;11269:17;:29::i;:::-;11251:47;;11309:24;11356:7;11336:55;;;:57;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11336:57:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11336:57:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11336:57:4;;;;;;;;;;;;;;;;11309:84;;11404:36;11541:4;11560:14;11588:16;11618:11;11443:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;11443:196:4;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;11443:196:4;11404:235;;11649:13;11715:16;11745:7;11766:23;11673:126;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;11673:126:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11673:126:4;11649:151;;11836:240;;;;;;;;11896:5;11836:240;;;;;;11944:19;11836:240;;;;;;11993:10;11836:240;;;;;;12030:1;11836:240;;;;12064:1;11836:240;;;11811:10;:22;11822:10;11811:22;;;;;;;;;;;;;;;:265;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12092:187;12124:10;12148:5;12167:14;12195:19;12228:16;12258:11;12092:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10129:2157;;;;;;;;;;;:::o;2965:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;11428:365:3:-;11493:9;:7;:9::i;:::-;11485:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11555:11;11568:14;11584:8;11596:27;:6;:25;;;:27::i;:::-;11554:69;;;;;;11684:3;11641:47;;:10;11652:5;11641:17;;;;;;;;;;;;11659:8;11641:27;;;;;;;;;;;;11669:2;11641:31;;;;;;;;;;;;;;;;;;;;:47;;;;11633:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11782:4;11740:18;11759:5;11740:25;;;;;;;;;;;;11766:8;11740:35;;;;;;;;;;;;11776:2;11740:39;;;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;11428:365;;;;:::o;2589:50:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4634:767:3:-;4760:12;4784:28;;:::i;:::-;4815:10;:22;4826:10;4815:22;;;;;;;;;;;;;;;4784:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4894:3;4855:43;;4863:8;:18;;;4855:43;;;;4847:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5011:14;5031:27;:6;:25;;;:27::i;:::-;5008:50;;;;5095:18;5089:25;;;;;;;;5077:37;;:8;:37;;;5069:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5154:26;5183:4;:18;;;5202:6;5210:12;5224:10;;5183:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5183:52:3;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5183:52:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5183:52:3;;;;;;39:16:-1;36:1;17:17;2:54;5183:52:3;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13:2;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5183:52:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;5183:52:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5183:52:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5154:81;;5281:1;5253:25;:13;:23;:25::i;:::-;:29;5245:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5326:8;:18;;;:23;;;5350:13;5326:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;5326:38:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5326:38:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5326:38:3;;;;5381:13;5374:20;;;;;4634:767;;;;;;:::o;17225:121::-;17282:17;;:::i;:::-;17318:21;17311:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17225:121;:::o;1332:41:35:-;1368:5;1332:41;:::o;17401:326:4:-;17501:29;17533:10;:26;17544:14;17533:26;;;;;;;;;;;;;;;17501:58;;17616:3;17577:43;;17585:8;:18;;;;;;;;;;;;17577:43;;;;17569:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17714:6;17663:8;:24;;:36;17688:10;17663:36;;;;;;;;;;;;;;;:48;17700:10;17663:48;;;;;;;;;;;:57;;;;17401:326;;;;:::o;17566:1942:3:-;17631:24;17667;17701:17;18848:15;18840:6;18836:28;18830:35;18810:55;;19019:23;19010:6;19007:1;19003:14;18999:44;18993:51;18965:4;18957:6;18953:17;18947:4;18943:28;18918:144;18879:183;;19120:19;19101:16;19094:24;19091:49;19075:65;;19275:12;19271:231;;;19339:3;19311:32;;:16;:32;;;;19303:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19432:5;19409:28;;:19;:28;;;19401:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19271:231;17566:1942;;;;;:::o;1970:107:50:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;3946:536:4:-;1103:9:50;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4072:3:4;4045:31;;:15;:31;;;;4037:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4130:11;4143:18;4163:15;4182:33;:10;:31;;;:33::i;:::-;4129:86;;;;;;4286:3;4233:57;;:9;4243:5;4233:16;;;;;;;;;;;;4250:12;4233:30;;;;;;;;;;;;4264:9;4233:41;;;;;;;;;;;;;;;;;;;;:57;;;4225:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4386:15;4342:9;4352:5;4342:16;;;;;;;;;;;;4359:12;4342:30;;;;;;;;;;;;4373:9;4342:41;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;4448:9;4416:59;;4434:12;4416:59;;4427:5;4416:59;;;4459:15;4416:59;;;;;;;;;;;;;;;;;;;;;;1159:1:50;;;3946:536:4;;:::o;18726:769::-;18801:19;18830:21;18861:31;18902;18943:19;18972:25;19007:15;19032:20;19069:28;;:::i;:::-;19100:10;:26;19111:14;19100:26;;;;;;;;;;;;;;;19069:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19303:8;:18;;;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19303:32:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19303:32:4;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;19303:32:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19136:199;;;;;;;;;;;;;;;;;;;;19367:8;:20;;;19345:43;;19412:8;:20;;;19398:34;;19462:8;:26;;;19442:46;;18726:769;;;;;;;;;;:::o;20022:318::-;20112:12;20134:16;20160:18;20188:17;20222:28;;:::i;:::-;20253:10;:26;20264:14;20253:26;;;;;;;;;;;;;;;20222:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20296:8;:18;;;:26;;;20323:9;20296:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;20296:37:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;20296:37:4;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;20296:37:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20289:44;;;;;;;;;20022:318;;;;;;;:::o;834:176:49:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;2159:459::-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;1054:318:45:-;1119:11;1132:14;1148:8;1208:4;1201:5;1197:16;1191:22;;1261:4;1253:5;1246;1242:17;1238:28;1226:40;;1313:4;1303:7;1296:5;1292:19;1288:30;1279:39;;1345:5;1352:8;1362:2;1337:28;;;;;;1054:318;;;;;:::o;1393:325:44:-;1479:8;1696:4;1674:20;1670:31;1664:38;1657:45;;1513:199;;;:::o;1010:331:47:-;1079:11;1092:12;1106:11;1174:4;1165:7;1161:18;1152:27;;1227:4;1219:5;1210:7;1206:19;1202:30;1192:40;;1281:4;1271:7;1262;1258:21;1254:32;1245:41;;1313:5;1320:6;1328:5;1305:29;;;;;;1010:331;;;;;:::o;788:96:48:-;833:15;867:10;860:17;;788:96;:::o;14411:1189:4:-;14597:29;14629:10;:22;14640:10;14629:22;;;;;;;;;;;;;;;14597:54;;14738:1;14723:12;:16;14719:875;;;14755:33;14791:8;:24;;:38;14816:12;14791:38;;;;;;;;;;;;;;;:50;14830:10;14791:50;;;;;;;;;;;;14755:86;;14878:48;14912:12;14911:13;;14878:8;:20;;;:24;;:48;;;;:::i;:::-;14855:8;:20;;:71;;;;15003:12;15002:13;;14965:25;:51;;14940:161;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15169:53;15208:12;15207:13;;15169:25;:29;;:53;;;;:::i;:::-;15116:8;:24;;:38;15141:12;15116:38;;;;;;;;;;;;;;;:50;15155:10;15116:50;;;;;;;;;;;:106;;;;15236:8;:20;;;;;;;;;;;;:33;;;15287:12;15325:4;15348:14;15236:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15236:127:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15236:127:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15236:127:4;;;;;;;;;;;;;;;;;14719:875;;;;15417:47;15450:12;15417:8;:20;;;:24;;:47;;;;:::i;:::-;15394:8;:20;;:70;;;;15478:8;:20;;;;;;;;;;;;:29;;;15525:12;15555:14;15478:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15478:105:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15478:105:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15478:105:4;;;;;;;;;;;;;;;;;14719:875;14411:1189;;;;;:::o;1976:1130:44:-;2065:16;2098:10;2274:4;2252:20;2248:31;2242:38;2222:2;2202:92;2193:101;;2994:20;2931:4;2927:2;2923:13;2892:4;2870:20;2866:31;2837:121;2810:166;2789:239;2782:246;;3055:5;3047:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1976:1130;;;;;:::o;20791:240:4:-;20880:15;20907:13;20923:11;:19;;20941:1;20923:19;;;20937:1;20923:19;20907:35;;20952:12;20967:10;:18;;20984:1;20967:18;;;20980:1;20967:18;20952:33;;21018:6;21008:7;:16;20996:28;;20791:240;;;;;;:::o;21135:267::-;21269:14;21378:6;21370:5;21361:7;21357:19;21354:31;21344:7;21336:6;21332:20;21329:57;21318:68;;21304:92;;;;;:::o;2040:176:46:-;2094:5;2111:7;2125:1;2121;:5;2111:15;;2149:1;2144:6;;:1;:6;;;;2136:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:1;2201:8;;;2040:176;;;;:::o;2178:225:50:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1274:134:49:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;1290:18220:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1290:18220:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./noteRegistry/NoteRegistryManager.sol\";\n\nimport \"../interfaces/IAZTEC.sol\";\n\nimport \"../libs/NoteUtils.sol\";\n// TODO: v-- harmonize\nimport \"../libs/ProofUtils.sol\";\nimport \"../libs/VersioningUtils.sol\";\nimport \"../libs/SafeMath8.sol\";\n\n/**\n * @title The AZTEC Cryptography Engine\n * @author AZTEC\n * @dev ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables\n *      digital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.\n * \n * Copyright 2020 Spilsbury Holdings Ltd \n *\n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n**/\ncontract ACE is IAZTEC, Ownable, NoteRegistryManager {\n    using NoteUtils for bytes;\n    using ProofUtils for uint24;\n    using SafeMath for uint256;\n    using SafeMath8 for uint8;\n\n    event SetCommonReferenceString(bytes32[6] _commonReferenceString);\n    event SetProof(\n        uint8 indexed epoch,\n        uint8 indexed category,\n        uint8 indexed id,\n        address validatorAddress\n    );\n    event IncrementLatestEpoch(uint8 newLatestEpoch);\n\n    // The commonReferenceString contains one G1 group element and one G2 group element,\n    // that are created via the AZTEC protocol's trusted setup. All zero-knowledge proofs supported\n    // by ACE use the same common reference string.\n    bytes32[6] private commonReferenceString;\n\n    // `validators`contains the addresses of the contracts that validate specific proof types\n    address[0x100][0x100][0x10000] public validators;\n\n    // a list of invalidated proof ids, used to blacklist proofs in the case of a vulnerability being discovered\n    bool[0x100][0x100][0x10000] public disabledValidators;\n\n    // latest proof epoch accepted by this contract\n    uint8 public latestEpoch = 1;\n\n    /**\n    * @dev contract constructor. Sets the owner of ACE\n    **/\n    constructor() public Ownable() {}\n\n    /**\n    * @dev Mint AZTEC notes\n    *\n    * @param _proof the AZTEC proof object\n    * @param _proofData the mint proof construction data\n    * @param _proofSender the Ethereum address of the original transaction sender. It is explicitly assumed that\n    *        an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\n    * Unnamed param is the AZTEC zero-knowledge proof data\n    * @return two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the\n    * notes that were created. Returned so that a zkAsset can emit the appropriate events\n    */\n    function mint(\n        uint24 _proof,\n        bytes calldata _proofData,\n        address _proofSender\n    ) external returns (bytes memory) {\n\n        NoteRegistry memory registry = registries[msg.sender];\n        require(address(registry.behaviour) != address(0x0), \"note registry does not exist for the given address\");\n\n        // Check that it's a mintable proof\n        (, uint8 category, ) = _proof.getProofComponents();\n\n        require(category == uint8(ProofCategory.MINT), \"this is not a mint proof\");\n\n        bytes memory _proofOutputs = this.validateProof(_proof, _proofSender, _proofData);\n        require(_proofOutputs.getLength() > 0, \"call to validateProof failed\");\n\n        registry.behaviour.mint(_proofOutputs);\n        return(_proofOutputs);\n    }\n\n    /**\n    * @dev Burn AZTEC notes\n    *\n    * @param _proof the AZTEC proof object\n    * @param _proofData the burn proof construction data\n    * @param _proofSender the Ethereum address of the original transaction sender. It is explicitly assumed that\n    *        an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\n    * Unnamed param is the AZTEC zero-knowledge proof data\n    * @return two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the\n    * notes that were created. Returned so that a zkAsset can emit the appropriate events\n    */\n    function burn(\n        uint24 _proof,\n        bytes calldata _proofData,\n        address _proofSender\n    ) external returns (bytes memory) {\n        NoteRegistry memory registry = registries[msg.sender];\n        require(address(registry.behaviour) != address(0x0), \"note registry does not exist for the given address\");\n\n        // Check that it's a burnable proof\n        (, uint8 category, ) = _proof.getProofComponents();\n\n        require(category == uint8(ProofCategory.BURN), \"this is not a burn proof\");\n\n        bytes memory _proofOutputs = this.validateProof(_proof, _proofSender, _proofData);\n        require(_proofOutputs.getLength() > 0, \"call to validateProof failed\");\n\n        registry.behaviour.burn(_proofOutputs);\n        return _proofOutputs;\n    }\n\n    /**\n    * @dev Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract\n    *      linked to `_proof`. The validator smart contract will have the following interface:\n    *\n    *      function validate(\n    *          bytes _proofData,\n    *          address _sender,\n    *          bytes32[6] _commonReferenceString\n    *      ) public returns (bytes)\n    *\n    * @param _proof the AZTEC proof object\n    * @param _sender the Ethereum address of the original transaction sender. It is explicitly assumed that\n    *        an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\n    * Unnamed param is the AZTEC zero-knowledge proof data\n    * @return a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard\n    */\n    function validateProof(uint24 _proof, address _sender, bytes calldata) external returns (bytes memory) {\n        require(_proof != 0, \"expected the proof to be valid\");\n        // validate that the provided _proof object maps to a corresponding validator and also that\n        // the validator is not disabled\n        address validatorAddress = getValidatorAddress(_proof);\n        bytes memory proofOutputs;\n        assembly {\n            // the first evm word of the 3rd function param is the abi encoded location of proof data\n            let proofDataLocation := add(0x04, calldataload(0x44))\n\n            // manually construct validator calldata map\n            let memPtr := mload(0x40)\n            mstore(add(memPtr, 0x04), 0x100) // location in calldata of the start of `bytes _proofData` (0x100)\n            mstore(add(memPtr, 0x24), _sender)\n            mstore(add(memPtr, 0x44), sload(commonReferenceString_slot))\n            mstore(add(memPtr, 0x64), sload(add(0x01, commonReferenceString_slot)))\n            mstore(add(memPtr, 0x84), sload(add(0x02, commonReferenceString_slot)))\n            mstore(add(memPtr, 0xa4), sload(add(0x03, commonReferenceString_slot)))\n            mstore(add(memPtr, 0xc4), sload(add(0x04, commonReferenceString_slot)))\n            mstore(add(memPtr, 0xe4), sload(add(0x05, commonReferenceString_slot)))\n\n            // 0x104 because there's an address, the length 6 and the static array items\n            let destination := add(memPtr, 0x104)\n            // note that we offset by 0x20 because the first word is the length of the dynamic bytes array\n            let proofDataSize := add(calldataload(proofDataLocation), 0x20)\n            // copy the calldata into memory so we can call the validator contract\n            calldatacopy(destination, proofDataLocation, proofDataSize)\n            // call our validator smart contract, and validate the call succeeded\n            let callSize := add(proofDataSize, 0x104)\n            switch staticcall(gas, validatorAddress, memPtr, callSize, 0x00, 0x00)\n            case 0 {\n                mstore(0x00, 400) revert(0x00, 0x20) // call failed because proof is invalid\n            }\n\n            // copy returndata to memory\n            returndatacopy(memPtr, 0x00, returndatasize)\n            // store the proof outputs in memory\n            mstore(0x40, add(memPtr, returndatasize))\n            // the first evm word in the memory pointer is the abi encoded location of the actual returned data\n            proofOutputs := add(memPtr, mload(memPtr))\n        }\n\n        // if this proof satisfies a balancing relationship, we need to record the proof hash\n        if (((_proof >> 8) & 0xff) == uint8(ProofCategory.BALANCED)) {\n            uint256 length = proofOutputs.getLength();\n            for (uint256 i = 0; i < length; i += 1) {\n                bytes32 proofHash = keccak256(proofOutputs.get(i));\n                bytes32 validatedProofHash = keccak256(abi.encode(proofHash, _proof, msg.sender));\n                validatedProofs[validatedProofHash] = true;\n            }\n        }\n        return proofOutputs;\n    }\n\n    /**\n    * @dev Clear storage variables set when validating zero-knowledge proofs.\n    *      The only address that can clear data from `validatedProofs` is the address that created the proof.\n    *      Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)\n    *      to reduce gas costs. It is highly likely that any storage variables set by `validateProof`\n    *      are only required for the duration of a single transaction.\n    *      E.g. a decentralized exchange validating a swap proof and sending transfer instructions to\n    *      two confidential assets.\n    *      This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`\n    * @param _proof the AZTEC proof object\n    * @param _proofHashes dynamic array of proof hashes\n    */\n    function clearProofByHashes(uint24 _proof, bytes32[] calldata _proofHashes) external {\n        uint256 length = _proofHashes.length;\n        for (uint256 i = 0; i < length; i += 1) {\n            bytes32 proofHash = _proofHashes[i];\n            require(proofHash != bytes32(0x0), \"expected no empty proof hash\");\n            bytes32 validatedProofHash = keccak256(abi.encode(proofHash, _proof, msg.sender));\n            require(validatedProofs[validatedProofHash] == true, \"can only clear previously validated proofs\");\n            validatedProofs[validatedProofHash] = false;\n        }\n    }\n\n    /**\n    * @dev Set the common reference string.\n    *      If the trusted setup is re-run, we will need to be able to change the crs\n    * @param _commonReferenceString the new commonReferenceString\n    */\n    function setCommonReferenceString(bytes32[6] memory _commonReferenceString) public {\n        require(isOwner(), \"only the owner can set the common reference string\");\n        commonReferenceString = _commonReferenceString;\n        emit SetCommonReferenceString(_commonReferenceString);\n    }\n\n    /**\n    * @dev Forever invalidate the given proof.\n    * @param _proof the AZTEC proof object\n    */\n    function invalidateProof(uint24 _proof) public {\n        require(isOwner(), \"only the owner can invalidate a proof\");\n        (uint8 epoch, uint8 category, uint8 id) = _proof.getProofComponents();\n        require(validators[epoch][category][id] != address(0x0), \"can only invalidate proofs that exist\");\n        disabledValidators[epoch][category][id] = true;\n    }\n\n    /**\n    * @dev Validate a previously validated AZTEC proof via its hash\n    *      This enables confidential assets to receive transfer instructions from a dApp that\n    *      has already validated an AZTEC proof that satisfies a balancing relationship.\n    * @param _proof the AZTEC proof object\n    * @param _proofHash the hash of the `proofOutput` received by the asset\n    * @param _sender the Ethereum address of the contract issuing the transfer instruction\n    * @return a boolean that signifies whether the corresponding AZTEC proof has been validated\n    */\n    function validateProofByHash(\n        uint24 _proof,\n        bytes32 _proofHash,\n        address _sender\n    ) public view returns (bool) {\n        // We need create a unique encoding of _proof, _proofHash and _sender,\n        // and use as a key to access validatedProofs\n        // We do this by computing bytes32 validatedProofHash = keccak256(ABI.encode(_proof, _proofHash, _sender))\n        // We also need to access disabledValidators[_proof.epoch][_proof.category][_proof.id]\n        // This bit is implemented in Yul, as 3-dimensional array access chews through\n        // a lot of gas in Solidity, as does ABI.encode\n        bytes32 validatedProofHash;\n        bool isValidatorDisabled;\n        assembly {\n            // inside _proof, we have 3 packed variables : [epoch, category, id]\n            // each is a uint8.\n\n            // We need to compute the storage key for `disabledValidators[epoch][category][id]`\n            // Type of array is bool[0x100][0x100][0x100]\n            // Solidity will only squish 32 boolean variables into a single storage slot, not 256\n            // => result of disabledValidators[epoch][category] is stored in 0x08 storage slots\n            // => result of disabledValidators[epoch] is stored in 0x08 * 0x100 = 0x800 storage slots\n\n            // To compute the storage slot  disabledValidators[epoch][category][id], we do the following:\n            // 1. get the disabledValidators slot\n            // 2. add (epoch * 0x800) to the slot (or epoch << 11)\n            // 3. add (category * 0x08) to the slot (or category << 3)\n            // 4. add (id / 0x20) to the slot (or id >> 5)\n\n            // Once the storage slot has been loaded, we need to isolate the byte that contains our boolean\n            // This will be equal to id % 0x20, which is also id & 0x1f\n\n            // Putting this all together. The storage slot offset from '_proof' is...\n            // epoch: ((_proof & 0xff0000) >> 16) << 11 = ((_proof & 0xff0000) >> 5)\n            // category: ((_proof & 0xff00) >> 8) << 3 = ((_proof & 0xff00) >> 5)\n            // id: (_proof & 0xff) >> 5\n            // i.e. the storage slot offset = _proof >> 5\n\n            // the byte index of the storage word that we require, is equal to (_proof & 0x1f)\n            // to convert to a bit index, we multiply by 8\n            // i.e. bit index = shl(3, and(_proof & 0x1f))\n            // => result = shr(shl(3, and(_proof & 0x1f), value))\n            isValidatorDisabled :=\n                shr(\n                    shl(\n                        0x03,\n                        and(_proof, 0x1f)\n                    ),\n                    sload(add(shr(5, _proof), disabledValidators_slot))\n                )\n\n            // Next, compute validatedProofHash = keccak256(abi.encode(_proofHash, _proof, _sender))\n            // cache free memory pointer - we will overwrite it when computing hash (cheaper than using free memory)\n            let memPtr := mload(0x40)\n            mstore(0x00, _proofHash)\n            mstore(0x20, _proof)\n            mstore(0x40, _sender)\n            validatedProofHash := keccak256(0x00, 0x60)\n            mstore(0x40, memPtr) // restore the free memory pointer\n        }\n        require(isValidatorDisabled == false, \"proof id has been invalidated\");\n        return validatedProofs[validatedProofHash];\n    }\n\n    /**\n    * @dev Adds or modifies a proof into the Cryptography Engine.\n    *       This method links a given `_proof` to a smart contract validator.\n    * @param _proof the AZTEC proof object\n    * @param _validatorAddress the address of the smart contract validator\n    */\n    function setProof(\n        uint24 _proof,\n        address _validatorAddress\n    ) public {\n        require(isOwner(), \"only the owner can set a proof\");\n        require(_validatorAddress != address(0x0), \"expected the validator address to exist\");\n        (uint8 epoch, uint8 category, uint8 id) = _proof.getProofComponents();\n        require(epoch <= latestEpoch, \"the proof epoch cannot be bigger than the latest epoch\");\n        require(validators[epoch][category][id] == address(0x0), \"existing proofs cannot be modified\");\n        validators[epoch][category][id] = _validatorAddress;\n        emit SetProof(epoch, category, id, _validatorAddress);\n    }\n\n    /**\n     * @dev Increments the `latestEpoch` storage variable.\n     */\n    function incrementLatestEpoch() public {\n        require(isOwner(), \"only the owner can update the latest epoch\");\n        latestEpoch = latestEpoch.add(1);\n        emit IncrementLatestEpoch(latestEpoch);\n    }\n\n    /**\n    * @dev Returns the common reference string.\n    * We use a custom getter for `commonReferenceString` - the default getter created by making the storage\n    * variable public indexes individual elements of the array, and we want to return the whole array\n    */\n    function getCommonReferenceString() public view returns (bytes32[6] memory) {\n        return commonReferenceString;\n    }\n\n    /**\n    * @dev Get the address of the relevant validator contract\n    *\n    * @param _proof unique identifier of a particular proof\n    * @return validatorAddress - the address of the validator contract\n    */\n    function getValidatorAddress(uint24 _proof) public view returns (address validatorAddress) {\n        bool isValidatorDisabled;\n        bool queryInvalid;\n        assembly {\n            // To compute the storage key for validatorAddress[epoch][category][id], we do the following:\n            // 1. get the validatorAddress slot\n            // 2. add (epoch * 0x10000) to the slot\n            // 3. add (category * 0x100) to the slot\n            // 4. add (id) to the slot\n            // i.e. the range of storage pointers allocated to validatorAddress ranges from\n            // validatorAddress_slot to (0xffff * 0x10000 + 0xff * 0x100 + 0xff = validatorAddress_slot 0xffffffff)\n\n            // Conveniently, the multiplications we have to perform on epoch, category and id correspond\n            // to their byte positions in _proof.\n            // i.e. (epoch * 0x10000) = and(_proof, 0xff0000)\n            // and  (category * 0x100) = and(_proof, 0xff00)\n            // and  (id) = and(_proof, 0xff)\n\n            // Putting this all together. The storage slot offset from '_proof' is...\n            // (_proof & 0xffff0000) + (_proof & 0xff00) + (_proof & 0xff)\n            // i.e. the storage slot offset IS the value of _proof\n            validatorAddress := sload(add(_proof, validators_slot))\n\n            isValidatorDisabled :=\n                shr(\n                    shl(0x03, and(_proof, 0x1f)),\n                    sload(add(shr(5, _proof), disabledValidators_slot))\n                )\n            queryInvalid := or(iszero(validatorAddress), isValidatorDisabled)\n        }\n\n        // wrap both require checks in a single if test. This means the happy path only has 1 conditional jump\n        if (queryInvalid) {\n            require(validatorAddress != address(0x0), \"expected the validator address to exist\");\n            require(isValidatorDisabled == false, \"expected the validator address to not be disabled\");\n        }\n    }\n}\n\n",
  "sourcePath": "@aztec/protocol/contracts/ACE/ACE.sol",
  "ast": {
    "absolutePath": "@aztec/protocol/contracts/ACE/ACE.sol",
    "exportedSymbols": {
      "ACE": [
        721
      ]
    },
    "id": 722,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 98,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 99,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 6006,
        "src": "33:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 6124,
        "src": "93:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/ACE/noteRegistry/NoteRegistryManager.sol",
        "file": "./noteRegistry/NoteRegistryManager.sol",
        "id": 101,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 1682,
        "src": "158:48:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/interfaces/IAZTEC.sol",
        "file": "../interfaces/IAZTEC.sol",
        "id": 102,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5193,
        "src": "208:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/NoteUtils.sol",
        "file": "../libs/NoteUtils.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5656,
        "src": "244:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
        "file": "../libs/ProofUtils.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5677,
        "src": "299:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/VersioningUtils.sol",
        "file": "../libs/VersioningUtils.sol",
        "id": 105,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5792,
        "src": "332:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/SafeMath8.sol",
        "file": "../libs/SafeMath8.sol",
        "id": 106,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5771,
        "src": "370:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 107,
              "name": "IAZTEC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5192,
              "src": "1306:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAZTEC_$5192",
                "typeString": "contract IAZTEC"
              }
            },
            "id": 108,
            "nodeType": "InheritanceSpecifier",
            "src": "1306:6:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 109,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6123,
              "src": "1314:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6123",
                "typeString": "contract Ownable"
              }
            },
            "id": 110,
            "nodeType": "InheritanceSpecifier",
            "src": "1314:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 111,
              "name": "NoteRegistryManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1681,
              "src": "1323:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoteRegistryManager_$1681",
                "typeString": "contract NoteRegistryManager"
              }
            },
            "id": 112,
            "nodeType": "InheritanceSpecifier",
            "src": "1323:19:3"
          }
        ],
        "contractDependencies": [
          1681,
          5192,
          5818,
          6123
        ],
        "contractKind": "contract",
        "documentation": "@title The AZTEC Cryptography Engine\n@author AZTEC\n@dev ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables\n     digital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*",
        "fullyImplemented": true,
        "id": 721,
        "linearizedBaseContracts": [
          721,
          1681,
          6123,
          5818,
          5192
        ],
        "name": "ACE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 115,
            "libraryName": {
              "contractScope": null,
              "id": 113,
              "name": "NoteUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5655,
              "src": "1355:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoteUtils_$5655",
                "typeString": "library NoteUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1349:26:3",
            "typeName": {
              "id": 114,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1369:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 118,
            "libraryName": {
              "contractScope": null,
              "id": 116,
              "name": "ProofUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5676,
              "src": "1386:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProofUtils_$5676",
                "typeString": "library ProofUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1380:28:3",
            "typeName": {
              "id": 117,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1401:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            }
          },
          {
            "id": 121,
            "libraryName": {
              "contractScope": null,
              "id": 119,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6005,
              "src": "1419:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6005",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1413:27:3",
            "typeName": {
              "id": 120,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1432:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 124,
            "libraryName": {
              "contractScope": null,
              "id": 122,
              "name": "SafeMath8",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5770,
              "src": "1451:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath8_$5770",
                "typeString": "library SafeMath8"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1445:26:3",
            "typeName": {
              "id": 123,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1465:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 130,
            "name": "SetCommonReferenceString",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "indexed": false,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1508:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 125,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1508:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 127,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1516:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1508:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1507:35:3"
            },
            "src": "1477:66:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 140,
            "name": "SetProof",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "indexed": true,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1572:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "indexed": true,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1601:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": true,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1633:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1659:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1562:127:3"
            },
            "src": "1548:142:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 144,
            "name": "IncrementLatestEpoch",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "indexed": false,
                  "name": "newLatestEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1722:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1721:22:3"
            },
            "src": "1695:49:3"
          },
          {
            "constant": false,
            "id": 148,
            "name": "commonReferenceString",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "1991:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$6_storage",
              "typeString": "bytes32[6]"
            },
            "typeName": {
              "baseType": {
                "id": 145,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1991:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 147,
              "length": {
                "argumentTypes": null,
                "hexValue": "36",
                "id": 146,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1999:1:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "nodeType": "ArrayTypeName",
              "src": "1991:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                "typeString": "bytes32[6]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 156,
            "name": "validators",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "2132:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
              "typeString": "address[256][256][65536]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "baseType": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 151,
                  "length": {
                    "argumentTypes": null,
                    "hexValue": "3078313030",
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2140:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_256_by_1",
                      "typeString": "int_const 256"
                    },
                    "value": "0x100"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2132:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$256_storage_ptr",
                    "typeString": "address[256]"
                  }
                },
                "id": 153,
                "length": {
                  "argumentTypes": null,
                  "hexValue": "3078313030",
                  "id": 152,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2147:5:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "0x100"
                },
                "nodeType": "ArrayTypeName",
                "src": "2132:21:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage_ptr",
                  "typeString": "address[256][256]"
                }
              },
              "id": 155,
              "length": {
                "argumentTypes": null,
                "hexValue": "30783130303030",
                "id": 154,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2154:7:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_65536_by_1",
                  "typeString": "int_const 65536"
                },
                "value": "0x10000"
              },
              "nodeType": "ArrayTypeName",
              "src": "2132:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage_ptr",
                "typeString": "address[256][256][65536]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 164,
            "name": "disabledValidators",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "2300:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_array$_t_bool_$256_storage_$256_storage_$65536_storage",
              "typeString": "bool[256][256][65536]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "baseType": {
                    "id": 157,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 159,
                  "length": {
                    "argumentTypes": null,
                    "hexValue": "3078313030",
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2305:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_256_by_1",
                      "typeString": "int_const 256"
                    },
                    "value": "0x100"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2300:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$256_storage_ptr",
                    "typeString": "bool[256]"
                  }
                },
                "id": 161,
                "length": {
                  "argumentTypes": null,
                  "hexValue": "3078313030",
                  "id": 160,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2312:5:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "0x100"
                },
                "nodeType": "ArrayTypeName",
                "src": "2300:18:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_bool_$256_storage_$256_storage_ptr",
                  "typeString": "bool[256][256]"
                }
              },
              "id": 163,
              "length": {
                "argumentTypes": null,
                "hexValue": "30783130303030",
                "id": 162,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2319:7:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_65536_by_1",
                  "typeString": "int_const 65536"
                },
                "value": "0x10000"
              },
              "nodeType": "ArrayTypeName",
              "src": "2300:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_array$_t_bool_$256_storage_$256_storage_$65536_storage_ptr",
                "typeString": "bool[256][256][65536]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 167,
            "name": "latestEpoch",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "2412:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 165,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2412:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2439:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2549:2:3",
              "statements": []
            },
            "documentation": "@dev contract constructor. Sets the owner of ACE*",
            "id": 173,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6123,
                  "src": "2539:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$6123_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2539:9:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2529:2:3"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:0:3"
            },
            "scope": 721,
            "src": "2518:33:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3348:629:3",
              "statements": [
                {
                  "assignments": [
                    185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 185,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 248,
                      "src": "3359:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                        "typeString": "struct NoteRegistryManager.NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 184,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 791,
                        "src": "3359:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NoteRegistry_$791_storage_ptr",
                          "typeString": "struct NoteRegistryManager.NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 186,
                      "name": "registries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "3390:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NoteRegistry_$791_storage_$",
                        "typeString": "mapping(address => struct NoteRegistryManager.NoteRegistry storage ref)"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6687,
                        "src": "3401:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3401:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3390:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NoteRegistry_$791_storage",
                      "typeString": "struct NoteRegistryManager.NoteRegistry storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3359:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 193,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "3438:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                                  "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "behaviour",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 776,
                              "src": "3438:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            ],
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3430:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3430:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3469:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3461:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3461:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3430:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f746520726567697374727920646f6573206e6f7420657869737420666f722074686520676976656e2061646472657373",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3475:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        },
                        "value": "note registry does not exist for the given address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "3422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:106:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:106:3"
                },
                {
                  "assignments": [
                    null,
                    204,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 204,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 248,
                      "src": "3586:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3586:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 208,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3606:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "3606:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3583:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "3652:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 212,
                                "name": "ProofCategory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5169,
                                "src": "3670:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProofCategory_$5169_$",
                                  "typeString": "type(enum IAZTEC.ProofCategory)"
                                }
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "MINT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3670:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            ],
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3664:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3664:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3652:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74686973206973206e6f742061206d696e742070726f6f66",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3691:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a61670a3cd6535dd58cd733504bc61d04cdc786da37b868e3a64a6eb73dda39",
                          "typeString": "literal_string \"this is not a mint proof\""
                        },
                        "value": "this is not a mint proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a61670a3cd6535dd58cd733504bc61d04cdc786da37b868e3a64a6eb73dda39",
                          "typeString": "literal_string \"this is not a mint proof\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "3644:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3644:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3644:74:3"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "name": "_proofOutputs",
                      "nodeType": "VariableDeclaration",
                      "scope": 248,
                      "src": "3729:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3729:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 227,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3777:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_proofSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "3785:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "_proofData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "3799:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "3758:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ACE_$721",
                          "typeString": "contract ACE"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "validateProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "3758:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint24,address,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3729:81:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 229,
                              "name": "_proofOutputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "3828:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5589,
                            "src": "3828:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3828:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3856:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3828:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c20746f2076616c696461746550726f6f66206661696c6564",
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3859:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        },
                        "value": "call to validateProof failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "3820:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3820:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "_proofOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3925:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "3901:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                            "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "behaviour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 776,
                        "src": "3901:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                          "typeString": "contract NoteRegistryBehaviour"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2533,
                      "src": "3901:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3901:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3901:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_proofOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3956:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 246,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3955:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 247,
                  "nodeType": "Return",
                  "src": "3949:21:3"
                }
              ]
            },
            "documentation": "@dev Mint AZTEC notes\n    * @param _proof the AZTEC proof object\n@param _proofData the mint proof construction data\n@param _proofSender the Ethereum address of the original transaction sender. It is explicitly assumed that\n       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the\nnotes that were created. Returned so that a zkAsset can emit the appropriate events",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3231:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3231:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "name": "_proofData",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3254:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "name": "_proofSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3289:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3221:94:3"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3334:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3333:14:3"
            },
            "scope": 721,
            "src": "3208:769:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "4774:627:3",
              "statements": [
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "4784:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                        "typeString": "struct NoteRegistryManager.NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 260,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 791,
                        "src": "4784:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NoteRegistry_$791_storage_ptr",
                          "typeString": "struct NoteRegistryManager.NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "registries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "4815:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NoteRegistry_$791_storage_$",
                        "typeString": "mapping(address => struct NoteRegistryManager.NoteRegistry storage ref)"
                      }
                    },
                    "id": 265,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6687,
                        "src": "4826:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4826:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4815:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NoteRegistry_$791_storage",
                      "typeString": "struct NoteRegistryManager.NoteRegistry storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4784:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 269,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "4863:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                                  "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "behaviour",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 776,
                              "src": "4863:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            ],
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4855:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4855:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4894:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4886:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4855:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f746520726567697374727920646f6573206e6f7420657869737420666f722074686520676976656e2061646472657373",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4900:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        },
                        "value": "note registry does not exist for the given address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "4847:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4847:106:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "4847:106:3"
                },
                {
                  "assignments": [
                    null,
                    280,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 280,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "5011:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 279,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5011:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 284,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5031:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "5031:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5008:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 280,
                          "src": "5077:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 288,
                                "name": "ProofCategory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5169,
                                "src": "5095:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProofCategory_$5169_$",
                                  "typeString": "type(enum IAZTEC.ProofCategory)"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "BURN",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5095:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            ],
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5089:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5089:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "5077:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74686973206973206e6f742061206275726e2070726f6f66",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5116:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af3fdc7430d7cf312ad3f333fdfb7ee1ac5e7982b47eaf3019c3a34030b1caa3",
                          "typeString": "literal_string \"this is not a burn proof\""
                        },
                        "value": "this is not a burn proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af3fdc7430d7cf312ad3f333fdfb7ee1ac5e7982b47eaf3019c3a34030b1caa3",
                          "typeString": "literal_string \"this is not a burn proof\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "5069:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5069:74:3"
                },
                {
                  "assignments": [
                    296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 296,
                      "name": "_proofOutputs",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "5154:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5154:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 303,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 299,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5202:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "_proofSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "5210:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "_proofData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "5224:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "5183:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ACE_$721",
                          "typeString": "contract ACE"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "validateProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "5183:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint24,address,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5183:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5154:81:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 305,
                              "name": "_proofOutputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "5253:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5589,
                            "src": "5253:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5253:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5281:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5253:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c20746f2076616c696461746550726f6f66206661696c6564",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5284:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        },
                        "value": "call to validateProof failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "5245:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5245:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 318,
                        "name": "_proofOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "5350:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "5326:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                            "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "behaviour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 776,
                        "src": "5326:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                          "typeString": "contract NoteRegistryBehaviour"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2528,
                      "src": "5326:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5326:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "5326:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 321,
                    "name": "_proofOutputs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 296,
                    "src": "5381:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 259,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "5374:20:3"
                }
              ]
            },
            "documentation": "@dev Burn AZTEC notes\n    * @param _proof the AZTEC proof object\n@param _proofData the burn proof construction data\n@param _proofSender the Ethereum address of the original transaction sender. It is explicitly assumed that\n       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the\nnotes that were created. Returned so that a zkAsset can emit the appropriate events",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4657:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "name": "_proofData",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4680:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4680:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "name": "_proofSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4715:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4715:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4647:94:3"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4760:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4759:14:3"
            },
            "scope": 721,
            "src": "4634:767:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "6358:3006:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 336,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 326,
                          "src": "6376:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6386:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6376:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578706563746564207468652070726f6f6620746f2062652076616c6964",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6389:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e1e73360a929746029ba45fb8f703f55889d11fb7feaa0989d103e584fa1862",
                          "typeString": "literal_string \"expected the proof to be valid\""
                        },
                        "value": "expected the proof to be valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e1e73360a929746029ba45fb8f703f55889d11fb7feaa0989d103e584fa1862",
                          "typeString": "literal_string \"expected the proof to be valid\""
                        }
                      ],
                      "id": 335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "6368:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6368:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "6368:54:3"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "name": "validatorAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "6573:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6573:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "6620:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "id": 344,
                      "name": "getValidatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "6600:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (uint24) view returns (address)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6600:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6573:54:3"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "name": "proofOutputs",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "6637:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6637:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6637:25:3"
                },
                {
                  "externalReferences": [
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7151:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 328,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "7098:7:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7234:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7318:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7402:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7486:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7570:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatorAddress": {
                        "declaration": 343,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "8249:16:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "proofOutputs": {
                        "declaration": 349,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "8751:12:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 351,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let proofDataLocation := add(0x04, calldataload(0x44))\n    let memPtr := mload(0x40)\n    mstore(add(memPtr, 0x04), 0x100)\n    mstore(add(memPtr, 0x24), _sender)\n    mstore(add(memPtr, 0x44), sload(commonReferenceString_slot))\n    mstore(add(memPtr, 0x64), sload(add(0x01, commonReferenceString_slot)))\n    mstore(add(memPtr, 0x84), sload(add(0x02, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xa4), sload(add(0x03, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xc4), sload(add(0x04, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xe4), sload(add(0x05, commonReferenceString_slot)))\n    let destination := add(memPtr, 0x104)\n    let proofDataSize := add(calldataload(proofDataLocation), 0x20)\n    calldatacopy(destination, proofDataLocation, proofDataSize)\n    let callSize := add(proofDataSize, 0x104)\n    switch staticcall(gas(), validatorAddress, memPtr, callSize, 0x00, 0x00)\n    case 0 {\n        mstore(0x00, 400)\n        revert(0x00, 0x20)\n    }\n    returndatacopy(memPtr, 0x00, returndatasize())\n    mstore(0x40, add(memPtr, returndatasize()))\n    proofOutputs := add(memPtr, mload(memPtr))\n}",
                  "src": "6672:2131:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 352,
                                  "name": "_proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "8913:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "38",
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8923:1:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "8913:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "id": 355,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8912:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30786666",
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8928:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "0xff"
                          },
                          "src": "8912:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "id": 358,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8911:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 360,
                            "name": "ProofCategory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5169,
                            "src": "8943:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProofCategory_$5169_$",
                              "typeString": "type(enum IAZTEC.ProofCategory)"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BALANCED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8943:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProofCategory_$5169",
                            "typeString": "enum IAZTEC.ProofCategory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_ProofCategory_$5169",
                            "typeString": "enum IAZTEC.ProofCategory"
                          }
                        ],
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8937:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8937:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8911:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 411,
                  "nodeType": "IfStatement",
                  "src": "8907:422:3",
                  "trueBody": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "8968:361:3",
                    "statements": [
                      {
                        "assignments": [
                          365
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 365,
                            "name": "length",
                            "nodeType": "VariableDeclaration",
                            "scope": 410,
                            "src": "8982:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 364,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8982:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 369,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 366,
                              "name": "proofOutputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "8999:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5589,
                            "src": "8999:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8999:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8982:41:3"
                      },
                      {
                        "body": {
                          "id": 408,
                          "nodeType": "Block",
                          "src": "9077:242:3",
                          "statements": [
                            {
                              "assignments": [
                                382
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 382,
                                  "name": "proofHash",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 408,
                                  "src": "9095:17:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 381,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9095:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 389,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 386,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 371,
                                        "src": "9142:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 384,
                                        "name": "proofOutputs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "9125:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 385,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "get",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5608,
                                      "src": "9125:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory,uint256) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9125:19:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 383,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6681,
                                  "src": "9115:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9115:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9095:50:3"
                            },
                            {
                              "assignments": [
                                391
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 391,
                                  "name": "validatedProofHash",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 408,
                                  "src": "9163:26:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 390,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9163:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 401,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 395,
                                        "name": "proofHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 382,
                                        "src": "9213:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 396,
                                        "name": "_proof",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 326,
                                        "src": "9224:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 397,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6687,
                                          "src": "9232:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "9232:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 393,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6674,
                                        "src": "9202:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "9202:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9202:41:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 392,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6681,
                                  "src": "9192:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9192:52:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9163:81:3"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 402,
                                    "name": "validatedProofs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "9262:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                      "typeString": "mapping(bytes32 => bool)"
                                    }
                                  },
                                  "id": 404,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 403,
                                    "name": "validatedProofHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 391,
                                    "src": "9278:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9262:35:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9300:4:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9262:42:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 407,
                              "nodeType": "ExpressionStatement",
                              "src": "9262:42:3"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "9057:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 375,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "9061:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9057:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 409,
                        "initializationExpression": {
                          "assignments": [
                            371
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 371,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 409,
                              "src": "9042:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 370,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9042:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 373,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9054:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9042:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 377,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "9069:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9074:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9069:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 380,
                          "nodeType": "ExpressionStatement",
                          "src": "9069:6:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "9037:282:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 412,
                    "name": "proofOutputs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 349,
                    "src": "9345:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 334,
                  "id": 413,
                  "nodeType": "Return",
                  "src": "9338:19:3"
                }
              ]
            },
            "documentation": "@dev Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract\n     linked to `_proof`. The validator smart contract will have the following interface:\n    *      function validate(\n         bytes _proofData,\n         address _sender,\n         bytes32[6] _commonReferenceString\n     ) public returns (bytes)\n    * @param _proof the AZTEC proof object\n@param _sender the Ethereum address of the original transaction sender. It is explicitly assumed that\n       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6278:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6293:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6310:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6310:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6277:48:3"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6344:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6344:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6343:14:3"
            },
            "scope": 721,
            "src": "6255:3109:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "10304:506:3",
              "statements": [
                {
                  "assignments": [
                    424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 424,
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 483,
                      "src": "10314:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10314:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 427,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "_proofHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "10331:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                        "typeString": "bytes32[] calldata"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "10331:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10314:36:3"
                },
                {
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "10400:404:3",
                    "statements": [
                      {
                        "assignments": [
                          440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 440,
                            "name": "proofHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "10414:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 439,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10414:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 444,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "_proofHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "10434:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 442,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "10447:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10434:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10414:35:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 446,
                                "name": "proofHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "10471:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307830",
                                    "id": 448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10492:3:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10484:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": "bytes32"
                                },
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10484:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "10471:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6578706563746564206e6f20656d7074792070726f6f662068617368",
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10498:30:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_57c0cbf6672e239dd0e85da17bfbff597183b6b71b29f171463dcd6eb4bff18d",
                                "typeString": "literal_string \"expected no empty proof hash\""
                              },
                              "value": "expected no empty proof hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_57c0cbf6672e239dd0e85da17bfbff597183b6b71b29f171463dcd6eb4bff18d",
                                "typeString": "literal_string \"expected no empty proof hash\""
                              }
                            ],
                            "id": 445,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "10463:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10463:66:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 453,
                        "nodeType": "ExpressionStatement",
                        "src": "10463:66:3"
                      },
                      {
                        "assignments": [
                          455
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 455,
                            "name": "validatedProofHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "10543:26:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 454,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10543:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 465,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 459,
                                  "name": "proofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "10593:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 460,
                                  "name": "_proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 417,
                                  "src": "10604:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 461,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6687,
                                    "src": "10612:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10612:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 457,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6674,
                                  "src": "10582:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10582:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10582:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 456,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6681,
                            "src": "10572:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10572:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10543:81:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 467,
                                  "name": "validatedProofs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 813,
                                  "src": "10646:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 469,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 468,
                                  "name": "validatedProofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 455,
                                  "src": "10662:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10646:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10685:4:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "10646:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "63616e206f6e6c7920636c6561722070726576696f75736c792076616c6964617465642070726f6f6673",
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10691:44:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64cbf2ec327d949312b8a01267dc0a577e588c9d94f02b3c3a457383752d4972",
                                "typeString": "literal_string \"can only clear previously validated proofs\""
                              },
                              "value": "can only clear previously validated proofs"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64cbf2ec327d949312b8a01267dc0a577e588c9d94f02b3c3a457383752d4972",
                                "typeString": "literal_string \"can only clear previously validated proofs\""
                              }
                            ],
                            "id": 466,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "10638:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10638:98:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "10638:98:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 475,
                              "name": "validatedProofs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "10750:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 477,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 476,
                              "name": "validatedProofHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "10766:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10750:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10788:5:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "10750:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "10750:43:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 432,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "10380:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 433,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "10384:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10380:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 482,
                  "initializationExpression": {
                    "assignments": [
                      429
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 429,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "10365:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10365:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 431,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10377:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10365:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 435,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "10392:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10397:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10392:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 438,
                    "nodeType": "ExpressionStatement",
                    "src": "10392:6:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "10360:444:3"
                }
              ]
            },
            "documentation": "@dev Clear storage variables set when validating zero-knowledge proofs.\n     The only address that can clear data from `validatedProofs` is the address that created the proof.\n     Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)\n     to reduce gas costs. It is highly likely that any storage variables set by `validateProof`\n     are only required for the duration of a single transaction.\n     E.g. a decentralized exchange validating a swap proof and sending transfer instructions to\n     two confidential assets.\n     This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`\n@param _proof the AZTEC proof object\n@param _proofHashes dynamic array of proof hashes",
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clearProofByHashes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "10247:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10247:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "name": "_proofHashes",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "10262:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 418,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10262:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 419,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "10262:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10246:48:3"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10304:0:3"
            },
            "scope": 721,
            "src": "10219:591:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 505,
              "nodeType": "Block",
              "src": "11109:208:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 492,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "11127:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11127:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e207365742074686520636f6d6d6f6e207265666572656e636520737472696e67",
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11138:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb31c1979f5f9aadfd5877e486363e1835b4c2f889b8b18488010b60d41ae3ed",
                          "typeString": "literal_string \"only the owner can set the common reference string\""
                        },
                        "value": "only the owner can set the common reference string"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb31c1979f5f9aadfd5877e486363e1835b4c2f889b8b18488010b60d41ae3ed",
                          "typeString": "literal_string \"only the owner can set the common reference string\""
                        }
                      ],
                      "id": 491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "11119:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11119:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "11119:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 497,
                      "name": "commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "11201:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                        "typeString": "bytes32[6] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "_commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "11225:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                        "typeString": "bytes32[6] memory"
                      }
                    },
                    "src": "11201:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "11201:46:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 502,
                        "name": "_commonReferenceString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "11287:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      ],
                      "id": 501,
                      "name": "SetCommonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "11262:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_bytes32_$6_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[6] memory)"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11262:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 504,
                  "nodeType": "EmitStatement",
                  "src": "11257:53:3"
                }
              ]
            },
            "documentation": "@dev Set the common reference string.\n     If the trusted setup is re-run, we will need to be able to change the crs\n@param _commonReferenceString the new commonReferenceString",
            "id": 506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "11060:40:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 485,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "11060:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 487,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11068:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "11060:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11059:42:3"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11109:0:3"
            },
            "scope": 721,
            "src": "11026:291:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "11475:318:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 512,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "11493:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11493:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e20696e76616c696461746520612070726f6f66",
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11504:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_006dbc974bf36a06ef8e20cc1ade4bfc3a9884e296c4d7797686ef737236cce8",
                          "typeString": "literal_string \"only the owner can invalidate a proof\""
                        },
                        "value": "only the owner can invalidate a proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_006dbc974bf36a06ef8e20cc1ade4bfc3a9884e296c4d7797686ef737236cce8",
                          "typeString": "literal_string \"only the owner can invalidate a proof\""
                        }
                      ],
                      "id": 511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "11485:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11485:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "11485:59:3"
                },
                {
                  "assignments": [
                    518,
                    520,
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 518,
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "11555:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "11555:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 520,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "11568:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "11568:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 522,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "11584:8:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "11584:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "11596:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "11596:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11596:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11554:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 528,
                                "name": "validators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "11641:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
                                  "typeString": "address[256] storage ref[256] storage ref[65536] storage ref"
                                }
                              },
                              "id": 530,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 529,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "11652:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11641:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage",
                                "typeString": "address[256] storage ref[256] storage ref"
                              }
                            },
                            "id": 532,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 531,
                              "name": "category",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "11659:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11641:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$256_storage",
                              "typeString": "address[256] storage ref"
                            }
                          },
                          "id": 534,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "11669:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11641:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11684:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11676:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11676:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11641:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e206f6e6c7920696e76616c69646174652070726f6f66732074686174206578697374",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11690:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2a3312937983f208d7dfbdf147920d57c4722183d3e279a455cdeb2b9478add",
                          "typeString": "literal_string \"can only invalidate proofs that exist\""
                        },
                        "value": "can only invalidate proofs that exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2a3312937983f208d7dfbdf147920d57c4722183d3e279a455cdeb2b9478add",
                          "typeString": "literal_string \"can only invalidate proofs that exist\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "11633:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11633:97:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "11633:97:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "disabledValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "11740:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_array$_t_bool_$256_storage_$256_storage_$65536_storage",
                              "typeString": "bool[256] storage ref[256] storage ref[65536] storage ref"
                            }
                          },
                          "id": 546,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "11759:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11740:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_bool_$256_storage_$256_storage",
                            "typeString": "bool[256] storage ref[256] storage ref"
                          }
                        },
                        "id": 547,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 544,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "11766:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11740:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$256_storage",
                          "typeString": "bool[256] storage ref"
                        }
                      },
                      "id": 548,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 545,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "11776:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11740:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11782:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11740:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:46:3"
                }
              ]
            },
            "documentation": "@dev Forever invalidate the given proof.\n@param _proof the AZTEC proof object",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invalidateProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "11453:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11453:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11452:15:3"
            },
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11475:0:3"
            },
            "scope": 721,
            "src": "11428:365:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "12509:3206:3",
              "statements": [
                {
                  "assignments": [
                    565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 565,
                      "name": "validatedProofHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "13005:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 564,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13005:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 566,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13005:26:3"
                },
                {
                  "assignments": [
                    568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 568,
                      "name": "isValidatorDisabled",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "13041:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 567,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13041:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 569,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13041:24:3"
                },
                {
                  "externalReferences": [
                    {
                      "isValidatorDisabled": {
                        "declaration": 568,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "14829:19:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "14956:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15030:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "disabledValidators_slot": {
                        "declaration": 164,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "15039:23:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofHash": {
                        "declaration": 557,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15365:10:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15402:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 559,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15435:7:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatedProofHash": {
                        "declaration": 565,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15456:18:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 570,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    isValidatorDisabled := shr(shl(0x03, and(_proof, 0x1f)), sload(add(shr(5, _proof), disabledValidators_slot)))\n    let memPtr := mload(0x40)\n    mstore(0x00, _proofHash)\n    mstore(0x20, _proof)\n    mstore(0x40, _sender)\n    validatedProofHash := keccak256(0x00, 0x60)\n    mstore(0x40, memPtr)\n}",
                  "src": "13075:2502:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 572,
                          "name": "isValidatorDisabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "15594:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15617:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "15594:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70726f6f6620696420686173206265656e20696e76616c696461746564",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15624:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d13a897c44ad80ae67c474b560a6822daf6ffdb14dccb445b0409bb3346cd9d",
                          "typeString": "literal_string \"proof id has been invalidated\""
                        },
                        "value": "proof id has been invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d13a897c44ad80ae67c474b560a6822daf6ffdb14dccb445b0409bb3346cd9d",
                          "typeString": "literal_string \"proof id has been invalidated\""
                        }
                      ],
                      "id": 571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "15586:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15586:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "15586:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 578,
                      "name": "validatedProofs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "15673:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 580,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 579,
                      "name": "validatedProofHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "15689:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15673:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 563,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "15666:42:3"
                }
              ]
            },
            "documentation": "@dev Validate a previously validated AZTEC proof via its hash\n     This enables confidential assets to receive transfer instructions from a dApp that\n     has already validated an AZTEC proof that satisfies a balancing relationship.\n@param _proof the AZTEC proof object\n@param _proofHash the hash of the `proofOutput` received by the asset\n@param _sender the Ethereum address of the contract issuing the transfer instruction\n@return a boolean that signifies whether the corresponding AZTEC proof has been validated",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProofByHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12409:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12409:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "name": "_proofHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12432:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12432:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12460:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12460:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12399:82:3"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12503:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12503:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12502:6:3"
            },
            "scope": 721,
            "src": "12371:3344:3",
            "stateMutability": "view",
            "superFunction": 1019,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "16087:568:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 591,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "16105:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16105:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e2073657420612070726f6f66",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16116:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b626ee002567ad11e5b7994d985e9ce08e206b36843d36bb08d55a74e2841f5",
                          "typeString": "literal_string \"only the owner can set a proof\""
                        },
                        "value": "only the owner can set a proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b626ee002567ad11e5b7994d985e9ce08e206b36843d36bb08d55a74e2841f5",
                          "typeString": "literal_string \"only the owner can set a proof\""
                        }
                      ],
                      "id": 590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16097:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16097:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "16097:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 597,
                          "name": "_validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "16167:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16196:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16188:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16188:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "16167:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578706563746564207468652076616c696461746f72206164647265737320746f206578697374",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16202:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                          "typeString": "literal_string \"expected the validator address to exist\""
                        },
                        "value": "expected the validator address to exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                          "typeString": "literal_string \"expected the validator address to exist\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16159:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16159:85:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "16159:85:3"
                },
                {
                  "assignments": [
                    606,
                    608,
                    610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 606,
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "16255:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 605,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16255:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 608,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "16268:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 607,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16268:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 610,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "16284:8:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 609,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16284:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 614,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 611,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "16296:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "16296:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16296:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16254:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 616,
                          "name": "epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "16341:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 617,
                          "name": "latestEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "16350:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "16341:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468652070726f6f662065706f63682063616e6e6f7420626520626967676572207468616e20746865206c61746573742065706f6368",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16363:56:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2afedd12d9e90ec2f7bf15e00b2ebb601286740b819c8ef3d91071f6f2d3cd14",
                          "typeString": "literal_string \"the proof epoch cannot be bigger than the latest epoch\""
                        },
                        "value": "the proof epoch cannot be bigger than the latest epoch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2afedd12d9e90ec2f7bf15e00b2ebb601286740b819c8ef3d91071f6f2d3cd14",
                          "typeString": "literal_string \"the proof epoch cannot be bigger than the latest epoch\""
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16333:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16333:87:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "16333:87:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 623,
                                "name": "validators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "16438:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
                                  "typeString": "address[256] storage ref[256] storage ref[65536] storage ref"
                                }
                              },
                              "id": 625,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 624,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 606,
                                "src": "16449:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16438:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage",
                                "typeString": "address[256] storage ref[256] storage ref"
                              }
                            },
                            "id": 627,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 626,
                              "name": "category",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "16456:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16438:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$256_storage",
                              "typeString": "address[256] storage ref"
                            }
                          },
                          "id": 629,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 628,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "16466:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16438:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16481:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16473:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16473:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "16438:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578697374696e672070726f6f66732063616e6e6f74206265206d6f646966696564",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16487:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4493c9ac5cd18e9a7cb9f6d3efbcab467927ed9f527e2cb2c09fb6614f56bf21",
                          "typeString": "literal_string \"existing proofs cannot be modified\""
                        },
                        "value": "existing proofs cannot be modified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4493c9ac5cd18e9a7cb9f6d3efbcab467927ed9f527e2cb2c09fb6614f56bf21",
                          "typeString": "literal_string \"existing proofs cannot be modified\""
                        }
                      ],
                      "id": 622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16430:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16430:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "16430:94:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 637,
                            "name": "validators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "16534:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
                              "typeString": "address[256] storage ref[256] storage ref[65536] storage ref"
                            }
                          },
                          "id": 641,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 638,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "16545:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16534:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage",
                            "typeString": "address[256] storage ref[256] storage ref"
                          }
                        },
                        "id": 642,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 639,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "16552:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16534:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$256_storage",
                          "typeString": "address[256] storage ref"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "16562:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16534:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 644,
                      "name": "_validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "16568:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16534:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "16534:51:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "16609:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "16616:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "16626:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "_validatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "16630:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 647,
                      "name": "SetProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "16600:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,uint8,uint8,address)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16600:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "16595:53:3"
                }
              ]
            },
            "documentation": "@dev Adds or modifies a proof into the Cryptography Engine.\n      This method links a given `_proof` to a smart contract validator.\n@param _proof the AZTEC proof object\n@param _validatorAddress the address of the smart contract validator",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "16025:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16025:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "_validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "16048:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16048:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16015:64:3"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16087:0:3"
            },
            "scope": 721,
            "src": "15998:657:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "16775:171:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 659,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "16793:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16793:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e2075706461746520746865206c61746573742065706f6368",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16804:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0455040ca223285b3267dcd1ad316336483c7be5b89a65549707e41e49c39972",
                          "typeString": "literal_string \"only the owner can update the latest epoch\""
                        },
                        "value": "only the owner can update the latest epoch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0455040ca223285b3267dcd1ad316336483c7be5b89a65549707e41e49c39972",
                          "typeString": "literal_string \"only the owner can update the latest epoch\""
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16785:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16785:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "16785:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 664,
                      "name": "latestEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "16859:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16889:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 665,
                          "name": "latestEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "16873:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5769,
                        "src": "16873:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$bound_to$_t_uint8_$",
                          "typeString": "function (uint8,uint8) pure returns (uint8)"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16873:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16859:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "16859:32:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 672,
                        "name": "latestEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "16927:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 671,
                      "name": "IncrementLatestEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "16906:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16906:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "EmitStatement",
                  "src": "16901:38:3"
                }
              ]
            },
            "documentation": "@dev Increments the `latestEpoch` storage variable.",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementLatestEpoch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16765:2:3"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16775:0:3"
            },
            "scope": 721,
            "src": "16736:210:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "17301:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 683,
                    "name": "commonReferenceString",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148,
                    "src": "17318:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "functionReturnParameters": 682,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "17311:28:3"
                }
              ]
            },
            "documentation": "@dev Returns the common reference string.\nWe use a custom getter for `commonReferenceString` - the default getter created by making the storage\nvariable public indexes individual elements of the array, and we want to return the whole array",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17258:2:3"
            },
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "17282:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 678,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17282:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 680,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17290:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "17282:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17281:19:3"
            },
            "scope": 721,
            "src": "17225:121:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "17657:1851:3",
              "statements": [
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "name": "isValidatorDisabled",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "17667:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17667:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17667:24:3"
                },
                {
                  "assignments": [
                    697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 697,
                      "name": "queryInvalid",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "17701:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 696,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17701:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 698,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17701:17:3"
                },
                {
                  "externalReferences": [
                    {
                      "validatorAddress": {
                        "declaration": 691,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18810:16:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 688,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18840:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validators_slot": {
                        "declaration": 156,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "18848:15:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "isValidatorDisabled": {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18879:19:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 688,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19010:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 688,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18957:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "disabledValidators_slot": {
                        "declaration": 164,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "19019:23:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "queryInvalid": {
                        "declaration": 697,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19075:12:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatorAddress": {
                        "declaration": 691,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19101:16:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "isValidatorDisabled": {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19120:19:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 699,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    validatorAddress := sload(add(_proof, validators_slot))\n    isValidatorDisabled := shr(shl(0x03, and(_proof, 0x1f)), sload(add(shr(5, _proof), disabledValidators_slot)))\n    queryInvalid := or(iszero(validatorAddress), isValidatorDisabled)\n}",
                  "src": "17728:1422:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 700,
                    "name": "queryInvalid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 697,
                    "src": "19275:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 718,
                  "nodeType": "IfStatement",
                  "src": "19271:231:3",
                  "trueBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "19289:213:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 702,
                                "name": "validatorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 691,
                                "src": "19311:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307830",
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19339:3:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19331:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19331:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "19311:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6578706563746564207468652076616c696461746f72206164647265737320746f206578697374",
                              "id": 707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19345:41:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                                "typeString": "literal_string \"expected the validator address to exist\""
                              },
                              "value": "expected the validator address to exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                                "typeString": "literal_string \"expected the validator address to exist\""
                              }
                            ],
                            "id": 701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "19303:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19303:84:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "19303:84:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 711,
                                "name": "isValidatorDisabled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 694,
                                "src": "19409:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19432:5:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "19409:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6578706563746564207468652076616c696461746f72206164647265737320746f206e6f742062652064697361626c6564",
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19439:51:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d16f7524b1ef4febf3375d751113e83ad41ea86aca368d1f448e6ee2a192cb5d",
                                "typeString": "literal_string \"expected the validator address to not be disabled\""
                              },
                              "value": "expected the validator address to not be disabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d16f7524b1ef4febf3375d751113e83ad41ea86aca368d1f448e6ee2a192cb5d",
                                "typeString": "literal_string \"expected the validator address to not be disabled\""
                              }
                            ],
                            "id": 710,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "19401:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19401:90:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "19401:90:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Get the address of the relevant validator contract\n    * @param _proof unique identifier of a particular proof\n@return validatorAddress - the address of the validator contract",
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "17595:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "17595:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17594:15:3"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "17631:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17631:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17630:26:3"
            },
            "scope": 721,
            "src": "17566:1942:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 722,
        "src": "1290:18220:3"
      }
    ],
    "src": "0:19512:3"
  },
  "legacyAST": {
    "absolutePath": "@aztec/protocol/contracts/ACE/ACE.sol",
    "exportedSymbols": {
      "ACE": [
        721
      ]
    },
    "id": 722,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 98,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 99,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 6006,
        "src": "33:59:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 100,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 6124,
        "src": "93:63:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/ACE/noteRegistry/NoteRegistryManager.sol",
        "file": "./noteRegistry/NoteRegistryManager.sol",
        "id": 101,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 1682,
        "src": "158:48:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/interfaces/IAZTEC.sol",
        "file": "../interfaces/IAZTEC.sol",
        "id": 102,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5193,
        "src": "208:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/NoteUtils.sol",
        "file": "../libs/NoteUtils.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5656,
        "src": "244:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/ProofUtils.sol",
        "file": "../libs/ProofUtils.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5677,
        "src": "299:32:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/VersioningUtils.sol",
        "file": "../libs/VersioningUtils.sol",
        "id": 105,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5792,
        "src": "332:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@aztec/protocol/contracts/libs/SafeMath8.sol",
        "file": "../libs/SafeMath8.sol",
        "id": 106,
        "nodeType": "ImportDirective",
        "scope": 722,
        "sourceUnit": 5771,
        "src": "370:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 107,
              "name": "IAZTEC",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5192,
              "src": "1306:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAZTEC_$5192",
                "typeString": "contract IAZTEC"
              }
            },
            "id": 108,
            "nodeType": "InheritanceSpecifier",
            "src": "1306:6:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 109,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6123,
              "src": "1314:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$6123",
                "typeString": "contract Ownable"
              }
            },
            "id": 110,
            "nodeType": "InheritanceSpecifier",
            "src": "1314:7:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 111,
              "name": "NoteRegistryManager",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1681,
              "src": "1323:19:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoteRegistryManager_$1681",
                "typeString": "contract NoteRegistryManager"
              }
            },
            "id": 112,
            "nodeType": "InheritanceSpecifier",
            "src": "1323:19:3"
          }
        ],
        "contractDependencies": [
          1681,
          5192,
          5818,
          6123
        ],
        "contractKind": "contract",
        "documentation": "@title The AZTEC Cryptography Engine\n@author AZTEC\n@dev ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables\n     digital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.\n\n * Copyright 2020 Spilsbury Holdings Ltd \n * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\");\nyou may not use this file except in compliance with the License.\n * This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n * You should have received a copy of the GNU Lesser General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.*",
        "fullyImplemented": true,
        "id": 721,
        "linearizedBaseContracts": [
          721,
          1681,
          6123,
          5818,
          5192
        ],
        "name": "ACE",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 115,
            "libraryName": {
              "contractScope": null,
              "id": 113,
              "name": "NoteUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5655,
              "src": "1355:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NoteUtils_$5655",
                "typeString": "library NoteUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1349:26:3",
            "typeName": {
              "id": 114,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "1369:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            }
          },
          {
            "id": 118,
            "libraryName": {
              "contractScope": null,
              "id": 116,
              "name": "ProofUtils",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5676,
              "src": "1386:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ProofUtils_$5676",
                "typeString": "library ProofUtils"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1380:28:3",
            "typeName": {
              "id": 117,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "1401:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            }
          },
          {
            "id": 121,
            "libraryName": {
              "contractScope": null,
              "id": 119,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6005,
              "src": "1419:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$6005",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1413:27:3",
            "typeName": {
              "id": 120,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1432:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 124,
            "libraryName": {
              "contractScope": null,
              "id": 122,
              "name": "SafeMath8",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5770,
              "src": "1451:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath8_$5770",
                "typeString": "library SafeMath8"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1445:26:3",
            "typeName": {
              "id": 123,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1465:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 130,
            "name": "SetCommonReferenceString",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "indexed": false,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 130,
                  "src": "1508:33:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 125,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1508:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 127,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 126,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1516:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1508:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1507:35:3"
            },
            "src": "1477:66:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 140,
            "name": "SetProof",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "indexed": true,
                  "name": "epoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1572:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1572:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "indexed": true,
                  "name": "category",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1601:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1601:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 136,
                  "indexed": true,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1633:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 135,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1633:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 138,
                  "indexed": false,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1659:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1562:127:3"
            },
            "src": "1548:142:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 144,
            "name": "IncrementLatestEpoch",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 142,
                  "indexed": false,
                  "name": "newLatestEpoch",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1722:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 141,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1722:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1721:22:3"
            },
            "src": "1695:49:3"
          },
          {
            "constant": false,
            "id": 148,
            "name": "commonReferenceString",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "1991:40:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_bytes32_$6_storage",
              "typeString": "bytes32[6]"
            },
            "typeName": {
              "baseType": {
                "id": 145,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1991:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "id": 147,
              "length": {
                "argumentTypes": null,
                "hexValue": "36",
                "id": 146,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1999:1:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_6_by_1",
                  "typeString": "int_const 6"
                },
                "value": "6"
              },
              "nodeType": "ArrayTypeName",
              "src": "1991:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                "typeString": "bytes32[6]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 156,
            "name": "validators",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "2132:48:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
              "typeString": "address[256][256][65536]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "baseType": {
                    "id": 149,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2132:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 151,
                  "length": {
                    "argumentTypes": null,
                    "hexValue": "3078313030",
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2140:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_256_by_1",
                      "typeString": "int_const 256"
                    },
                    "value": "0x100"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2132:14:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$256_storage_ptr",
                    "typeString": "address[256]"
                  }
                },
                "id": 153,
                "length": {
                  "argumentTypes": null,
                  "hexValue": "3078313030",
                  "id": 152,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2147:5:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "0x100"
                },
                "nodeType": "ArrayTypeName",
                "src": "2132:21:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage_ptr",
                  "typeString": "address[256][256]"
                }
              },
              "id": 155,
              "length": {
                "argumentTypes": null,
                "hexValue": "30783130303030",
                "id": 154,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2154:7:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_65536_by_1",
                  "typeString": "int_const 65536"
                },
                "value": "0x10000"
              },
              "nodeType": "ArrayTypeName",
              "src": "2132:30:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage_ptr",
                "typeString": "address[256][256][65536]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 164,
            "name": "disabledValidators",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "2300:53:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_array$_t_bool_$256_storage_$256_storage_$65536_storage",
              "typeString": "bool[256][256][65536]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "baseType": {
                    "id": 157,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 159,
                  "length": {
                    "argumentTypes": null,
                    "hexValue": "3078313030",
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2305:5:3",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_256_by_1",
                      "typeString": "int_const 256"
                    },
                    "value": "0x100"
                  },
                  "nodeType": "ArrayTypeName",
                  "src": "2300:11:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$256_storage_ptr",
                    "typeString": "bool[256]"
                  }
                },
                "id": 161,
                "length": {
                  "argumentTypes": null,
                  "hexValue": "3078313030",
                  "id": 160,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2312:5:3",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "0x100"
                },
                "nodeType": "ArrayTypeName",
                "src": "2300:18:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_array$_t_bool_$256_storage_$256_storage_ptr",
                  "typeString": "bool[256][256]"
                }
              },
              "id": 163,
              "length": {
                "argumentTypes": null,
                "hexValue": "30783130303030",
                "id": 162,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2319:7:3",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_65536_by_1",
                  "typeString": "int_const 65536"
                },
                "value": "0x10000"
              },
              "nodeType": "ArrayTypeName",
              "src": "2300:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_array$_t_bool_$256_storage_$256_storage_$65536_storage_ptr",
                "typeString": "bool[256][256][65536]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 167,
            "name": "latestEpoch",
            "nodeType": "VariableDeclaration",
            "scope": 721,
            "src": "2412:28:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 165,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "2412:5:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "31",
              "id": 166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2439:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 172,
              "nodeType": "Block",
              "src": "2549:2:3",
              "statements": []
            },
            "documentation": "@dev contract constructor. Sets the owner of ACE*",
            "id": 173,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "Ownable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6123,
                  "src": "2539:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Ownable_$6123_$",
                    "typeString": "type(contract Ownable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2539:9:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2529:2:3"
            },
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2549:0:3"
            },
            "scope": 721,
            "src": "2518:33:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3348:629:3",
              "statements": [
                {
                  "assignments": [
                    185
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 185,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 248,
                      "src": "3359:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                        "typeString": "struct NoteRegistryManager.NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 184,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 791,
                        "src": "3359:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NoteRegistry_$791_storage_ptr",
                          "typeString": "struct NoteRegistryManager.NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 186,
                      "name": "registries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "3390:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NoteRegistry_$791_storage_$",
                        "typeString": "mapping(address => struct NoteRegistryManager.NoteRegistry storage ref)"
                      }
                    },
                    "id": 189,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 187,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6687,
                        "src": "3401:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3401:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3390:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NoteRegistry_$791_storage",
                      "typeString": "struct NoteRegistryManager.NoteRegistry storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3359:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 193,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 185,
                                "src": "3438:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                                  "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                                }
                              },
                              "id": 194,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "behaviour",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 776,
                              "src": "3438:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            ],
                            "id": 192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3430:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3430:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3469:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3461:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3461:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3430:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f746520726567697374727920646f6573206e6f7420657869737420666f722074686520676976656e2061646472657373",
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3475:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        },
                        "value": "note registry does not exist for the given address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "3422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3422:106:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 202,
                  "nodeType": "ExpressionStatement",
                  "src": "3422:106:3"
                },
                {
                  "assignments": [
                    null,
                    204,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 204,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 248,
                      "src": "3586:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 203,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3586:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 208,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 205,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3606:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "3606:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3583:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 210,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 204,
                          "src": "3652:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 212,
                                "name": "ProofCategory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5169,
                                "src": "3670:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProofCategory_$5169_$",
                                  "typeString": "type(enum IAZTEC.ProofCategory)"
                                }
                              },
                              "id": 213,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "MINT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3670:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            ],
                            "id": 211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3664:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3664:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "3652:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74686973206973206e6f742061206d696e742070726f6f66",
                        "id": 216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3691:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a61670a3cd6535dd58cd733504bc61d04cdc786da37b868e3a64a6eb73dda39",
                          "typeString": "literal_string \"this is not a mint proof\""
                        },
                        "value": "this is not a mint proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a61670a3cd6535dd58cd733504bc61d04cdc786da37b868e3a64a6eb73dda39",
                          "typeString": "literal_string \"this is not a mint proof\""
                        }
                      ],
                      "id": 209,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "3644:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3644:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "3644:74:3"
                },
                {
                  "assignments": [
                    220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 220,
                      "name": "_proofOutputs",
                      "nodeType": "VariableDeclaration",
                      "scope": 248,
                      "src": "3729:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 219,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3729:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 227,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 223,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 175,
                        "src": "3777:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 224,
                        "name": "_proofSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 179,
                        "src": "3785:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 225,
                        "name": "_proofData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 177,
                        "src": "3799:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 221,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "3758:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ACE_$721",
                          "typeString": "contract ACE"
                        }
                      },
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "validateProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "3758:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint24,address,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3758:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3729:81:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 229,
                              "name": "_proofOutputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 220,
                              "src": "3828:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5589,
                            "src": "3828:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3828:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3856:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3828:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c20746f2076616c696461746550726f6f66206661696c6564",
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3859:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        },
                        "value": "call to validateProof failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        }
                      ],
                      "id": 228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "3820:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3820:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 236,
                  "nodeType": "ExpressionStatement",
                  "src": "3820:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 242,
                        "name": "_proofOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3925:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 237,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 185,
                          "src": "3901:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                            "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                          }
                        },
                        "id": 240,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "behaviour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 776,
                        "src": "3901:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                          "typeString": "contract NoteRegistryBehaviour"
                        }
                      },
                      "id": 241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2533,
                      "src": "3901:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3901:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 244,
                  "nodeType": "ExpressionStatement",
                  "src": "3901:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 245,
                        "name": "_proofOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 220,
                        "src": "3956:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "id": 246,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3955:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 183,
                  "id": 247,
                  "nodeType": "Return",
                  "src": "3949:21:3"
                }
              ]
            },
            "documentation": "@dev Mint AZTEC notes\n    * @param _proof the AZTEC proof object\n@param _proofData the mint proof construction data\n@param _proofSender the Ethereum address of the original transaction sender. It is explicitly assumed that\n       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the\nnotes that were created. Returned so that a zkAsset can emit the appropriate events",
            "id": 249,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 175,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3231:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "3231:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "name": "_proofData",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3254:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3254:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "name": "_proofSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3289:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3289:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3221:94:3"
            },
            "returnParameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 249,
                  "src": "3334:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3334:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3333:14:3"
            },
            "scope": 721,
            "src": "3208:769:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 323,
              "nodeType": "Block",
              "src": "4774:627:3",
              "statements": [
                {
                  "assignments": [
                    261
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 261,
                      "name": "registry",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "4784:28:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                        "typeString": "struct NoteRegistryManager.NoteRegistry"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 260,
                        "name": "NoteRegistry",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 791,
                        "src": "4784:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_NoteRegistry_$791_storage_ptr",
                          "typeString": "struct NoteRegistryManager.NoteRegistry"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 266,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 262,
                      "name": "registries",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "4815:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_NoteRegistry_$791_storage_$",
                        "typeString": "mapping(address => struct NoteRegistryManager.NoteRegistry storage ref)"
                      }
                    },
                    "id": 265,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 263,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6687,
                        "src": "4826:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4826:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4815:22:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_NoteRegistry_$791_storage",
                      "typeString": "struct NoteRegistryManager.NoteRegistry storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4784:53:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 269,
                                "name": "registry",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 261,
                                "src": "4863:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                                  "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                                }
                              },
                              "id": 270,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "behaviour",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 776,
                              "src": "4863:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                                "typeString": "contract NoteRegistryBehaviour"
                              }
                            ],
                            "id": 268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4855:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4855:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4894:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4886:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4886:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4855:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f746520726567697374727920646f6573206e6f7420657869737420666f722074686520676976656e2061646472657373",
                        "id": 276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4900:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        },
                        "value": "note registry does not exist for the given address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_725e5bd81522827a94f4771d7255ebb006ee664c1ea4ca45655a801a1c813fd5",
                          "typeString": "literal_string \"note registry does not exist for the given address\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "4847:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4847:106:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 278,
                  "nodeType": "ExpressionStatement",
                  "src": "4847:106:3"
                },
                {
                  "assignments": [
                    null,
                    280,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 280,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "5011:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 279,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "5011:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 284,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 281,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5031:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "5031:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5031:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5008:50:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 286,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 280,
                          "src": "5077:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 288,
                                "name": "ProofCategory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5169,
                                "src": "5095:13:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProofCategory_$5169_$",
                                  "typeString": "type(enum IAZTEC.ProofCategory)"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "BURN",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "5095:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ProofCategory_$5169",
                                "typeString": "enum IAZTEC.ProofCategory"
                              }
                            ],
                            "id": 287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5089:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint8_$",
                              "typeString": "type(uint8)"
                            },
                            "typeName": "uint8"
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5089:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "5077:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "74686973206973206e6f742061206275726e2070726f6f66",
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5116:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_af3fdc7430d7cf312ad3f333fdfb7ee1ac5e7982b47eaf3019c3a34030b1caa3",
                          "typeString": "literal_string \"this is not a burn proof\""
                        },
                        "value": "this is not a burn proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_af3fdc7430d7cf312ad3f333fdfb7ee1ac5e7982b47eaf3019c3a34030b1caa3",
                          "typeString": "literal_string \"this is not a burn proof\""
                        }
                      ],
                      "id": 285,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "5069:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5069:74:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 294,
                  "nodeType": "ExpressionStatement",
                  "src": "5069:74:3"
                },
                {
                  "assignments": [
                    296
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 296,
                      "name": "_proofOutputs",
                      "nodeType": "VariableDeclaration",
                      "scope": 323,
                      "src": "5154:26:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 295,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5154:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 303,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 299,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 251,
                        "src": "5202:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 300,
                        "name": "_proofSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 255,
                        "src": "5210:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 301,
                        "name": "_proofData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "5224:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 297,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6743,
                        "src": "5183:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ACE_$721",
                          "typeString": "contract ACE"
                        }
                      },
                      "id": 298,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "validateProof",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 415,
                      "src": "5183:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint24_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint24,address,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5183:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5154:81:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 305,
                              "name": "_proofOutputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "5253:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 306,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5589,
                            "src": "5253:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5253:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5281:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5253:29:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616c6c20746f2076616c696461746550726f6f66206661696c6564",
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5284:30:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        },
                        "value": "call to validateProof failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15c722aebaad11e8ed2f8cd1639ebe588dba3a9f862d93e1406b5cd8ea22c384",
                          "typeString": "literal_string \"call to validateProof failed\""
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "5245:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5245:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 318,
                        "name": "_proofOutputs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 296,
                        "src": "5350:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 313,
                          "name": "registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 261,
                          "src": "5326:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_NoteRegistry_$791_memory_ptr",
                            "typeString": "struct NoteRegistryManager.NoteRegistry memory"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "behaviour",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 776,
                        "src": "5326:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NoteRegistryBehaviour_$2601",
                          "typeString": "contract NoteRegistryBehaviour"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2528,
                      "src": "5326:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5326:38:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 320,
                  "nodeType": "ExpressionStatement",
                  "src": "5326:38:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 321,
                    "name": "_proofOutputs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 296,
                    "src": "5381:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 259,
                  "id": 322,
                  "nodeType": "Return",
                  "src": "5374:20:3"
                }
              ]
            },
            "documentation": "@dev Burn AZTEC notes\n    * @param _proof the AZTEC proof object\n@param _proofData the burn proof construction data\n@param _proofSender the Ethereum address of the original transaction sender. It is explicitly assumed that\n       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the\nnotes that were created. Returned so that a zkAsset can emit the appropriate events",
            "id": 324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 251,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4657:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 250,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "4657:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 253,
                  "name": "_proofData",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4680:25:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4680:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "name": "_proofSender",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4715:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4715:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4647:94:3"
            },
            "returnParameters": {
              "id": 259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 258,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "4760:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 257,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4760:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4759:14:3"
            },
            "scope": 721,
            "src": "4634:767:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 414,
              "nodeType": "Block",
              "src": "6358:3006:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "id": 338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 336,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 326,
                          "src": "6376:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6386:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6376:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578706563746564207468652070726f6f6620746f2062652076616c6964",
                        "id": 339,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6389:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e1e73360a929746029ba45fb8f703f55889d11fb7feaa0989d103e584fa1862",
                          "typeString": "literal_string \"expected the proof to be valid\""
                        },
                        "value": "expected the proof to be valid"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e1e73360a929746029ba45fb8f703f55889d11fb7feaa0989d103e584fa1862",
                          "typeString": "literal_string \"expected the proof to be valid\""
                        }
                      ],
                      "id": 335,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "6368:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6368:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 341,
                  "nodeType": "ExpressionStatement",
                  "src": "6368:54:3"
                },
                {
                  "assignments": [
                    343
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 343,
                      "name": "validatorAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "6573:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 342,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6573:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 347,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 345,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "6620:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      ],
                      "id": 344,
                      "name": "getValidatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 720,
                      "src": "6600:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint24_$returns$_t_address_$",
                        "typeString": "function (uint24) view returns (address)"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6600:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6573:54:3"
                },
                {
                  "assignments": [
                    349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 349,
                      "name": "proofOutputs",
                      "nodeType": "VariableDeclaration",
                      "scope": 414,
                      "src": "6637:25:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 348,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "6637:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6637:25:3"
                },
                {
                  "externalReferences": [
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7151:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 328,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "7098:7:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7234:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7318:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7402:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7486:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "commonReferenceString_slot": {
                        "declaration": 148,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "7570:26:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatorAddress": {
                        "declaration": 343,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "8249:16:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "proofOutputs": {
                        "declaration": 349,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "8751:12:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 351,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let proofDataLocation := add(0x04, calldataload(0x44))\n    let memPtr := mload(0x40)\n    mstore(add(memPtr, 0x04), 0x100)\n    mstore(add(memPtr, 0x24), _sender)\n    mstore(add(memPtr, 0x44), sload(commonReferenceString_slot))\n    mstore(add(memPtr, 0x64), sload(add(0x01, commonReferenceString_slot)))\n    mstore(add(memPtr, 0x84), sload(add(0x02, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xa4), sload(add(0x03, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xc4), sload(add(0x04, commonReferenceString_slot)))\n    mstore(add(memPtr, 0xe4), sload(add(0x05, commonReferenceString_slot)))\n    let destination := add(memPtr, 0x104)\n    let proofDataSize := add(calldataload(proofDataLocation), 0x20)\n    calldatacopy(destination, proofDataLocation, proofDataSize)\n    let callSize := add(proofDataSize, 0x104)\n    switch staticcall(gas(), validatorAddress, memPtr, callSize, 0x00, 0x00)\n    case 0 {\n        mstore(0x00, 400)\n        revert(0x00, 0x20)\n    }\n    returndatacopy(memPtr, 0x00, returndatasize())\n    mstore(0x40, add(memPtr, returndatasize()))\n    proofOutputs := add(memPtr, mload(memPtr))\n}",
                  "src": "6672:2131:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "components": [
                              {
                                "argumentTypes": null,
                                "commonType": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                "id": 354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 352,
                                  "name": "_proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "8913:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">>",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "38",
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8923:1:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_8_by_1",
                                    "typeString": "int_const 8"
                                  },
                                  "value": "8"
                                },
                                "src": "8913:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                }
                              }
                            ],
                            "id": 355,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "8912:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30786666",
                            "id": 356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8928:4:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_255_by_1",
                              "typeString": "int_const 255"
                            },
                            "value": "0xff"
                          },
                          "src": "8912:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        }
                      ],
                      "id": 358,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "8911:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 360,
                            "name": "ProofCategory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5169,
                            "src": "8943:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProofCategory_$5169_$",
                              "typeString": "type(enum IAZTEC.ProofCategory)"
                            }
                          },
                          "id": 361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BALANCED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "8943:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProofCategory_$5169",
                            "typeString": "enum IAZTEC.ProofCategory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_ProofCategory_$5169",
                            "typeString": "enum IAZTEC.ProofCategory"
                          }
                        ],
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8937:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8937:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "8911:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 411,
                  "nodeType": "IfStatement",
                  "src": "8907:422:3",
                  "trueBody": {
                    "id": 410,
                    "nodeType": "Block",
                    "src": "8968:361:3",
                    "statements": [
                      {
                        "assignments": [
                          365
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 365,
                            "name": "length",
                            "nodeType": "VariableDeclaration",
                            "scope": 410,
                            "src": "8982:14:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 364,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8982:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 369,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 366,
                              "name": "proofOutputs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 349,
                              "src": "8999:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 367,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getLength",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5589,
                            "src": "8999:22:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) pure returns (uint256)"
                            }
                          },
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8999:24:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8982:41:3"
                      },
                      {
                        "body": {
                          "id": 408,
                          "nodeType": "Block",
                          "src": "9077:242:3",
                          "statements": [
                            {
                              "assignments": [
                                382
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 382,
                                  "name": "proofHash",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 408,
                                  "src": "9095:17:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 381,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9095:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 389,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 386,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 371,
                                        "src": "9142:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 384,
                                        "name": "proofOutputs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 349,
                                        "src": "9125:12:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 385,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "get",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 5608,
                                      "src": "9125:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes memory,uint256) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9125:19:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 383,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6681,
                                  "src": "9115:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9115:30:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9095:50:3"
                            },
                            {
                              "assignments": [
                                391
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 391,
                                  "name": "validatedProofHash",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 408,
                                  "src": "9163:26:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 390,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9163:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 401,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 395,
                                        "name": "proofHash",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 382,
                                        "src": "9213:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 396,
                                        "name": "_proof",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 326,
                                        "src": "9224:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 397,
                                          "name": "msg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 6687,
                                          "src": "9232:3:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_message",
                                            "typeString": "msg"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "9232:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        },
                                        {
                                          "typeIdentifier": "t_uint24",
                                          "typeString": "uint24"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 393,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 6674,
                                        "src": "9202:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 394,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "9202:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9202:41:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 392,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6681,
                                  "src": "9192:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9192:52:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "9163:81:3"
                            },
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 406,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 402,
                                    "name": "validatedProofs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 813,
                                    "src": "9262:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                      "typeString": "mapping(bytes32 => bool)"
                                    }
                                  },
                                  "id": 404,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 403,
                                    "name": "validatedProofHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 391,
                                    "src": "9278:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "9262:35:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "hexValue": "74727565",
                                  "id": 405,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9300:4:3",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "9262:42:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 407,
                              "nodeType": "ExpressionStatement",
                              "src": "9262:42:3"
                            }
                          ]
                        },
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 374,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 371,
                            "src": "9057:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 375,
                            "name": "length",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 365,
                            "src": "9061:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9057:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 409,
                        "initializationExpression": {
                          "assignments": [
                            371
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 371,
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 409,
                              "src": "9042:9:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 370,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "9042:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "value": null,
                              "visibility": "internal"
                            }
                          ],
                          "id": 373,
                          "initialValue": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9054:1:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9042:13:3"
                        },
                        "loopExpression": {
                          "expression": {
                            "argumentTypes": null,
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "argumentTypes": null,
                              "id": 377,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "9069:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9074:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "9069:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 380,
                          "nodeType": "ExpressionStatement",
                          "src": "9069:6:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "9037:282:3"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 412,
                    "name": "proofOutputs",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 349,
                    "src": "9345:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 334,
                  "id": 413,
                  "nodeType": "Return",
                  "src": "9338:19:3"
                }
              ]
            },
            "documentation": "@dev Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract\n     linked to `_proof`. The validator smart contract will have the following interface:\n    *      function validate(\n         bytes _proofData,\n         address _sender,\n         bytes32[6] _commonReferenceString\n     ) public returns (bytes)\n    * @param _proof the AZTEC proof object\n@param _sender the Ethereum address of the original transaction sender. It is explicitly assumed that\n       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running\nUnnamed param is the AZTEC zero-knowledge proof data\n@return a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard",
            "id": 415,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 331,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 326,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6278:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "6278:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6293:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6293:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 330,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6310:14:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6310:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6277:48:3"
            },
            "returnParameters": {
              "id": 334,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 333,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 415,
                  "src": "6344:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 332,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6344:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6343:14:3"
            },
            "scope": 721,
            "src": "6255:3109:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 483,
              "nodeType": "Block",
              "src": "10304:506:3",
              "statements": [
                {
                  "assignments": [
                    424
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 424,
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 483,
                      "src": "10314:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 423,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10314:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 427,
                  "initialValue": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 425,
                      "name": "_proofHashes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 420,
                      "src": "10331:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                        "typeString": "bytes32[] calldata"
                      }
                    },
                    "id": 426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "10331:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10314:36:3"
                },
                {
                  "body": {
                    "id": 481,
                    "nodeType": "Block",
                    "src": "10400:404:3",
                    "statements": [
                      {
                        "assignments": [
                          440
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 440,
                            "name": "proofHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "10414:17:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 439,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10414:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 444,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 441,
                            "name": "_proofHashes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 420,
                            "src": "10434:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                              "typeString": "bytes32[] calldata"
                            }
                          },
                          "id": 443,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 442,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 429,
                            "src": "10447:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10434:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10414:35:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 446,
                                "name": "proofHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 440,
                                "src": "10471:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307830",
                                    "id": 448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10492:3:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10484:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": "bytes32"
                                },
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10484:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "10471:25:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6578706563746564206e6f20656d7074792070726f6f662068617368",
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10498:30:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_57c0cbf6672e239dd0e85da17bfbff597183b6b71b29f171463dcd6eb4bff18d",
                                "typeString": "literal_string \"expected no empty proof hash\""
                              },
                              "value": "expected no empty proof hash"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_57c0cbf6672e239dd0e85da17bfbff597183b6b71b29f171463dcd6eb4bff18d",
                                "typeString": "literal_string \"expected no empty proof hash\""
                              }
                            ],
                            "id": 445,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "10463:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10463:66:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 453,
                        "nodeType": "ExpressionStatement",
                        "src": "10463:66:3"
                      },
                      {
                        "assignments": [
                          455
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 455,
                            "name": "validatedProofHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 481,
                            "src": "10543:26:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 454,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10543:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 465,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 459,
                                  "name": "proofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "10593:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 460,
                                  "name": "_proof",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 417,
                                  "src": "10604:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 461,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 6687,
                                    "src": "10612:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "10612:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 457,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6674,
                                  "src": "10582:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 458,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "10582:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10582:41:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 456,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6681,
                            "src": "10572:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10572:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10543:81:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 471,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 467,
                                  "name": "validatedProofs",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 813,
                                  "src": "10646:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 469,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 468,
                                  "name": "validatedProofHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 455,
                                  "src": "10662:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10646:35:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 470,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10685:4:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "10646:43:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "63616e206f6e6c7920636c6561722070726576696f75736c792076616c6964617465642070726f6f6673",
                              "id": 472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10691:44:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_64cbf2ec327d949312b8a01267dc0a577e588c9d94f02b3c3a457383752d4972",
                                "typeString": "literal_string \"can only clear previously validated proofs\""
                              },
                              "value": "can only clear previously validated proofs"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_64cbf2ec327d949312b8a01267dc0a577e588c9d94f02b3c3a457383752d4972",
                                "typeString": "literal_string \"can only clear previously validated proofs\""
                              }
                            ],
                            "id": 466,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "10638:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10638:98:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 474,
                        "nodeType": "ExpressionStatement",
                        "src": "10638:98:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 475,
                              "name": "validatedProofs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 813,
                              "src": "10750:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 477,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 476,
                              "name": "validatedProofHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 455,
                              "src": "10766:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10750:35:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "hexValue": "66616c7365",
                            "id": 478,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10788:5:3",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "10750:43:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 480,
                        "nodeType": "ExpressionStatement",
                        "src": "10750:43:3"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 432,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "10380:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 433,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "10384:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10380:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 482,
                  "initializationExpression": {
                    "assignments": [
                      429
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 429,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 482,
                        "src": "10365:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10365:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 431,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10377:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10365:13:3"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 435,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 429,
                        "src": "10392:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10397:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "10392:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 438,
                    "nodeType": "ExpressionStatement",
                    "src": "10392:6:3"
                  },
                  "nodeType": "ForStatement",
                  "src": "10360:444:3"
                }
              ]
            },
            "documentation": "@dev Clear storage variables set when validating zero-knowledge proofs.\n     The only address that can clear data from `validatedProofs` is the address that created the proof.\n     Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)\n     to reduce gas costs. It is highly likely that any storage variables set by `validateProof`\n     are only required for the duration of a single transaction.\n     E.g. a decentralized exchange validating a swap proof and sending transfer instructions to\n     two confidential assets.\n     This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`\n@param _proof the AZTEC proof object\n@param _proofHashes dynamic array of proof hashes",
            "id": 484,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "clearProofByHashes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "10247:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "10247:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 420,
                  "name": "_proofHashes",
                  "nodeType": "VariableDeclaration",
                  "scope": 484,
                  "src": "10262:31:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 418,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "10262:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 419,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "10262:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10246:48:3"
            },
            "returnParameters": {
              "id": 422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10304:0:3"
            },
            "scope": 721,
            "src": "10219:591:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 505,
              "nodeType": "Block",
              "src": "11109:208:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 492,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "11127:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11127:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e207365742074686520636f6d6d6f6e207265666572656e636520737472696e67",
                        "id": 494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11138:52:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb31c1979f5f9aadfd5877e486363e1835b4c2f889b8b18488010b60d41ae3ed",
                          "typeString": "literal_string \"only the owner can set the common reference string\""
                        },
                        "value": "only the owner can set the common reference string"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb31c1979f5f9aadfd5877e486363e1835b4c2f889b8b18488010b60d41ae3ed",
                          "typeString": "literal_string \"only the owner can set the common reference string\""
                        }
                      ],
                      "id": 491,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "11119:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11119:72:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 496,
                  "nodeType": "ExpressionStatement",
                  "src": "11119:72:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 497,
                      "name": "commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 148,
                      "src": "11201:21:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                        "typeString": "bytes32[6] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 498,
                      "name": "_commonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 488,
                      "src": "11225:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                        "typeString": "bytes32[6] memory"
                      }
                    },
                    "src": "11201:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "id": 500,
                  "nodeType": "ExpressionStatement",
                  "src": "11201:46:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 502,
                        "name": "_commonReferenceString",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 488,
                        "src": "11287:22:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                          "typeString": "bytes32[6] memory"
                        }
                      ],
                      "id": 501,
                      "name": "SetCommonReferenceString",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 130,
                      "src": "11262:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_array$_t_bytes32_$6_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32[6] memory)"
                      }
                    },
                    "id": 503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11262:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 504,
                  "nodeType": "EmitStatement",
                  "src": "11257:53:3"
                }
              ]
            },
            "documentation": "@dev Set the common reference string.\n     If the trusted setup is re-run, we will need to be able to change the crs\n@param _commonReferenceString the new commonReferenceString",
            "id": 506,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 488,
                  "name": "_commonReferenceString",
                  "nodeType": "VariableDeclaration",
                  "scope": 506,
                  "src": "11060:40:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 485,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "11060:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 487,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11068:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "11060:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11059:42:3"
            },
            "returnParameters": {
              "id": 490,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11109:0:3"
            },
            "scope": 721,
            "src": "11026:291:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "11475:318:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 512,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "11493:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11493:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e20696e76616c696461746520612070726f6f66",
                        "id": 514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11504:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_006dbc974bf36a06ef8e20cc1ade4bfc3a9884e296c4d7797686ef737236cce8",
                          "typeString": "literal_string \"only the owner can invalidate a proof\""
                        },
                        "value": "only the owner can invalidate a proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_006dbc974bf36a06ef8e20cc1ade4bfc3a9884e296c4d7797686ef737236cce8",
                          "typeString": "literal_string \"only the owner can invalidate a proof\""
                        }
                      ],
                      "id": 511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "11485:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11485:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "11485:59:3"
                },
                {
                  "assignments": [
                    518,
                    520,
                    522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 518,
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "11555:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 517,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "11555:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 520,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "11568:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 519,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "11568:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 522,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 552,
                      "src": "11584:8:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 521,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "11584:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 523,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 508,
                        "src": "11596:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "11596:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11596:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11554:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 528,
                                "name": "validators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "11641:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
                                  "typeString": "address[256] storage ref[256] storage ref[65536] storage ref"
                                }
                              },
                              "id": 530,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 529,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 518,
                                "src": "11652:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "11641:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage",
                                "typeString": "address[256] storage ref[256] storage ref"
                              }
                            },
                            "id": 532,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 531,
                              "name": "category",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "11659:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11641:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$256_storage",
                              "typeString": "address[256] storage ref"
                            }
                          },
                          "id": 534,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 533,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 522,
                            "src": "11669:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11641:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11684:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11676:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11676:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "11641:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "63616e206f6e6c7920696e76616c69646174652070726f6f66732074686174206578697374",
                        "id": 539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11690:39:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2a3312937983f208d7dfbdf147920d57c4722183d3e279a455cdeb2b9478add",
                          "typeString": "literal_string \"can only invalidate proofs that exist\""
                        },
                        "value": "can only invalidate proofs that exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2a3312937983f208d7dfbdf147920d57c4722183d3e279a455cdeb2b9478add",
                          "typeString": "literal_string \"can only invalidate proofs that exist\""
                        }
                      ],
                      "id": 527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "11633:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11633:97:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 541,
                  "nodeType": "ExpressionStatement",
                  "src": "11633:97:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 542,
                            "name": "disabledValidators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 164,
                            "src": "11740:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_array$_t_bool_$256_storage_$256_storage_$65536_storage",
                              "typeString": "bool[256] storage ref[256] storage ref[65536] storage ref"
                            }
                          },
                          "id": 546,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 543,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 518,
                            "src": "11759:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11740:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_bool_$256_storage_$256_storage",
                            "typeString": "bool[256] storage ref[256] storage ref"
                          }
                        },
                        "id": 547,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 544,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 520,
                          "src": "11766:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11740:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$256_storage",
                          "typeString": "bool[256] storage ref"
                        }
                      },
                      "id": 548,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 545,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 522,
                        "src": "11776:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11740:39:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11782:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11740:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "11740:46:3"
                }
              ]
            },
            "documentation": "@dev Forever invalidate the given proof.\n@param _proof the AZTEC proof object",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invalidateProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 508,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "11453:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 507,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "11453:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11452:15:3"
            },
            "returnParameters": {
              "id": 510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11475:0:3"
            },
            "scope": 721,
            "src": "11428:365:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "12509:3206:3",
              "statements": [
                {
                  "assignments": [
                    565
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 565,
                      "name": "validatedProofHash",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "13005:26:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 564,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13005:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 566,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13005:26:3"
                },
                {
                  "assignments": [
                    568
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 568,
                      "name": "isValidatorDisabled",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "13041:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 567,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13041:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 569,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13041:24:3"
                },
                {
                  "externalReferences": [
                    {
                      "isValidatorDisabled": {
                        "declaration": 568,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "14829:19:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "14956:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15030:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "disabledValidators_slot": {
                        "declaration": 164,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "15039:23:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proofHash": {
                        "declaration": 557,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15365:10:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 555,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15402:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_sender": {
                        "declaration": 559,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15435:7:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatedProofHash": {
                        "declaration": 565,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "15456:18:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 570,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    isValidatorDisabled := shr(shl(0x03, and(_proof, 0x1f)), sload(add(shr(5, _proof), disabledValidators_slot)))\n    let memPtr := mload(0x40)\n    mstore(0x00, _proofHash)\n    mstore(0x20, _proof)\n    mstore(0x40, _sender)\n    validatedProofHash := keccak256(0x00, 0x60)\n    mstore(0x40, memPtr)\n}",
                  "src": "13075:2502:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 572,
                          "name": "isValidatorDisabled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 568,
                          "src": "15594:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15617:5:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "15594:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "70726f6f6620696420686173206265656e20696e76616c696461746564",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15624:31:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d13a897c44ad80ae67c474b560a6822daf6ffdb14dccb445b0409bb3346cd9d",
                          "typeString": "literal_string \"proof id has been invalidated\""
                        },
                        "value": "proof id has been invalidated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d13a897c44ad80ae67c474b560a6822daf6ffdb14dccb445b0409bb3346cd9d",
                          "typeString": "literal_string \"proof id has been invalidated\""
                        }
                      ],
                      "id": 571,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "15586:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15586:70:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "15586:70:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 578,
                      "name": "validatedProofs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "15673:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 580,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 579,
                      "name": "validatedProofHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 565,
                      "src": "15689:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15673:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 563,
                  "id": 581,
                  "nodeType": "Return",
                  "src": "15666:42:3"
                }
              ]
            },
            "documentation": "@dev Validate a previously validated AZTEC proof via its hash\n     This enables confidential assets to receive transfer instructions from a dApp that\n     has already validated an AZTEC proof that satisfies a balancing relationship.\n@param _proof the AZTEC proof object\n@param _proofHash the hash of the `proofOutput` received by the asset\n@param _sender the Ethereum address of the contract issuing the transfer instruction\n@return a boolean that signifies whether the corresponding AZTEC proof has been validated",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "validateProofByHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 555,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12409:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 554,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "12409:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 557,
                  "name": "_proofHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12432:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 556,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12432:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 559,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12460:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12460:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12399:82:3"
            },
            "returnParameters": {
              "id": 563,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 562,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "12503:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 561,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12503:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12502:6:3"
            },
            "scope": 721,
            "src": "12371:3344:3",
            "stateMutability": "view",
            "superFunction": 1019,
            "visibility": "public"
          },
          {
            "body": {
              "id": 654,
              "nodeType": "Block",
              "src": "16087:568:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 591,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "16105:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16105:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e2073657420612070726f6f66",
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16116:32:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b626ee002567ad11e5b7994d985e9ce08e206b36843d36bb08d55a74e2841f5",
                          "typeString": "literal_string \"only the owner can set a proof\""
                        },
                        "value": "only the owner can set a proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b626ee002567ad11e5b7994d985e9ce08e206b36843d36bb08d55a74e2841f5",
                          "typeString": "literal_string \"only the owner can set a proof\""
                        }
                      ],
                      "id": 590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16097:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16097:52:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "16097:52:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 597,
                          "name": "_validatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 587,
                          "src": "16167:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16196:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16188:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16188:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "16167:33:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578706563746564207468652076616c696461746f72206164647265737320746f206578697374",
                        "id": 602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16202:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                          "typeString": "literal_string \"expected the validator address to exist\""
                        },
                        "value": "expected the validator address to exist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                          "typeString": "literal_string \"expected the validator address to exist\""
                        }
                      ],
                      "id": 596,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16159:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16159:85:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 604,
                  "nodeType": "ExpressionStatement",
                  "src": "16159:85:3"
                },
                {
                  "assignments": [
                    606,
                    608,
                    610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 606,
                      "name": "epoch",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "16255:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 605,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16255:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 608,
                      "name": "category",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "16268:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 607,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16268:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 610,
                      "name": "id",
                      "nodeType": "VariableDeclaration",
                      "scope": 654,
                      "src": "16284:8:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 609,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "16284:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 614,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 611,
                        "name": "_proof",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 585,
                        "src": "16296:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "id": 612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getProofComponents",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5675,
                      "src": "16296:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint24_$returns$_t_uint8_$_t_uint8_$_t_uint8_$bound_to$_t_uint24_$",
                        "typeString": "function (uint24) pure returns (uint8,uint8,uint8)"
                      }
                    },
                    "id": 613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16296:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_uint8_$_t_uint8_$",
                      "typeString": "tuple(uint8,uint8,uint8)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16254:69:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 616,
                          "name": "epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "16341:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 617,
                          "name": "latestEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "16350:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "src": "16341:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7468652070726f6f662065706f63682063616e6e6f7420626520626967676572207468616e20746865206c61746573742065706f6368",
                        "id": 619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16363:56:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2afedd12d9e90ec2f7bf15e00b2ebb601286740b819c8ef3d91071f6f2d3cd14",
                          "typeString": "literal_string \"the proof epoch cannot be bigger than the latest epoch\""
                        },
                        "value": "the proof epoch cannot be bigger than the latest epoch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2afedd12d9e90ec2f7bf15e00b2ebb601286740b819c8ef3d91071f6f2d3cd14",
                          "typeString": "literal_string \"the proof epoch cannot be bigger than the latest epoch\""
                        }
                      ],
                      "id": 615,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16333:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16333:87:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 621,
                  "nodeType": "ExpressionStatement",
                  "src": "16333:87:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 623,
                                "name": "validators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 156,
                                "src": "16438:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
                                  "typeString": "address[256] storage ref[256] storage ref[65536] storage ref"
                                }
                              },
                              "id": 625,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 624,
                                "name": "epoch",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 606,
                                "src": "16449:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16438:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage",
                                "typeString": "address[256] storage ref[256] storage ref"
                              }
                            },
                            "id": 627,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 626,
                              "name": "category",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "16456:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "16438:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$256_storage",
                              "typeString": "address[256] storage ref"
                            }
                          },
                          "id": 629,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 628,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "16466:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16438:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16481:3:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 630,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16473:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16473:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "16438:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6578697374696e672070726f6f66732063616e6e6f74206265206d6f646966696564",
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16487:36:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4493c9ac5cd18e9a7cb9f6d3efbcab467927ed9f527e2cb2c09fb6614f56bf21",
                          "typeString": "literal_string \"existing proofs cannot be modified\""
                        },
                        "value": "existing proofs cannot be modified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4493c9ac5cd18e9a7cb9f6d3efbcab467927ed9f527e2cb2c09fb6614f56bf21",
                          "typeString": "literal_string \"existing proofs cannot be modified\""
                        }
                      ],
                      "id": 622,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16430:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 635,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16430:94:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 636,
                  "nodeType": "ExpressionStatement",
                  "src": "16430:94:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 637,
                            "name": "validators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 156,
                            "src": "16534:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_array$_t_address_$256_storage_$256_storage_$65536_storage",
                              "typeString": "address[256] storage ref[256] storage ref[65536] storage ref"
                            }
                          },
                          "id": 641,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 638,
                            "name": "epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "16545:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16534:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_array$_t_address_$256_storage_$256_storage",
                            "typeString": "address[256] storage ref[256] storage ref"
                          }
                        },
                        "id": 642,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 639,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "16552:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16534:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$256_storage",
                          "typeString": "address[256] storage ref"
                        }
                      },
                      "id": 643,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 640,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "16562:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16534:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 644,
                      "name": "_validatorAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "16568:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16534:51:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 646,
                  "nodeType": "ExpressionStatement",
                  "src": "16534:51:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 648,
                        "name": "epoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 606,
                        "src": "16609:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 649,
                        "name": "category",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 608,
                        "src": "16616:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 650,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "16626:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 651,
                        "name": "_validatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 587,
                        "src": "16630:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 647,
                      "name": "SetProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "16600:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$_t_uint8_$_t_uint8_$_t_address_$returns$__$",
                        "typeString": "function (uint8,uint8,uint8,address)"
                      }
                    },
                    "id": 652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16600:48:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 653,
                  "nodeType": "EmitStatement",
                  "src": "16595:53:3"
                }
              ]
            },
            "documentation": "@dev Adds or modifies a proof into the Cryptography Engine.\n      This method links a given `_proof` to a smart contract validator.\n@param _proof the AZTEC proof object\n@param _validatorAddress the address of the smart contract validator",
            "id": 655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setProof",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "16025:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "16025:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "_validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 655,
                  "src": "16048:25:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16048:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16015:64:3"
            },
            "returnParameters": {
              "id": 589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16087:0:3"
            },
            "scope": 721,
            "src": "15998:657:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "16775:171:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 659,
                          "name": "isOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6067,
                          "src": "16793:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16793:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6f6e6c7920746865206f776e65722063616e2075706461746520746865206c61746573742065706f6368",
                        "id": 661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16804:44:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0455040ca223285b3267dcd1ad316336483c7be5b89a65549707e41e49c39972",
                          "typeString": "literal_string \"only the owner can update the latest epoch\""
                        },
                        "value": "only the owner can update the latest epoch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0455040ca223285b3267dcd1ad316336483c7be5b89a65549707e41e49c39972",
                          "typeString": "literal_string \"only the owner can update the latest epoch\""
                        }
                      ],
                      "id": 658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6690,
                        6691
                      ],
                      "referencedDeclaration": 6691,
                      "src": "16785:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16785:64:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 663,
                  "nodeType": "ExpressionStatement",
                  "src": "16785:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 664,
                      "name": "latestEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "16859:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16889:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 665,
                          "name": "latestEpoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "16873:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5769,
                        "src": "16873:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint8_$_t_uint8_$returns$_t_uint8_$bound_to$_t_uint8_$",
                          "typeString": "function (uint8,uint8) pure returns (uint8)"
                        }
                      },
                      "id": 668,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16873:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "16859:32:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 670,
                  "nodeType": "ExpressionStatement",
                  "src": "16859:32:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 672,
                        "name": "latestEpoch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "16927:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 671,
                      "name": "IncrementLatestEpoch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "16906:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16906:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "EmitStatement",
                  "src": "16901:38:3"
                }
              ]
            },
            "documentation": "@dev Increments the `latestEpoch` storage variable.",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementLatestEpoch",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16765:2:3"
            },
            "returnParameters": {
              "id": 657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16775:0:3"
            },
            "scope": 721,
            "src": "16736:210:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 685,
              "nodeType": "Block",
              "src": "17301:45:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 683,
                    "name": "commonReferenceString",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 148,
                    "src": "17318:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage",
                      "typeString": "bytes32[6] storage ref"
                    }
                  },
                  "functionReturnParameters": 682,
                  "id": 684,
                  "nodeType": "Return",
                  "src": "17311:28:3"
                }
              ]
            },
            "documentation": "@dev Returns the common reference string.\nWe use a custom getter for `commonReferenceString` - the default getter created by making the storage\nvariable public indexes individual elements of the array, and we want to return the whole array",
            "id": 686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCommonReferenceString",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17258:2:3"
            },
            "returnParameters": {
              "id": 682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 681,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 686,
                  "src": "17282:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$6_memory_ptr",
                    "typeString": "bytes32[6]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 678,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "17282:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 680,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "36",
                      "id": 679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17290:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "17282:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$6_storage_ptr",
                      "typeString": "bytes32[6]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17281:19:3"
            },
            "scope": 721,
            "src": "17225:121:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 719,
              "nodeType": "Block",
              "src": "17657:1851:3",
              "statements": [
                {
                  "assignments": [
                    694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 694,
                      "name": "isValidatorDisabled",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "17667:24:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17667:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 695,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17667:24:3"
                },
                {
                  "assignments": [
                    697
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 697,
                      "name": "queryInvalid",
                      "nodeType": "VariableDeclaration",
                      "scope": 719,
                      "src": "17701:17:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 696,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17701:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 698,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17701:17:3"
                },
                {
                  "externalReferences": [
                    {
                      "validatorAddress": {
                        "declaration": 691,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18810:16:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 688,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18840:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validators_slot": {
                        "declaration": 156,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "18848:15:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "isValidatorDisabled": {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18879:19:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 688,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19010:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "_proof": {
                        "declaration": 688,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "18957:6:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "disabledValidators_slot": {
                        "declaration": 164,
                        "isOffset": false,
                        "isSlot": true,
                        "src": "19019:23:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "queryInvalid": {
                        "declaration": 697,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19075:12:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "validatorAddress": {
                        "declaration": 691,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19101:16:3",
                        "valueSize": 1
                      }
                    },
                    {
                      "isValidatorDisabled": {
                        "declaration": 694,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "19120:19:3",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 699,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    validatorAddress := sload(add(_proof, validators_slot))\n    isValidatorDisabled := shr(shl(0x03, and(_proof, 0x1f)), sload(add(shr(5, _proof), disabledValidators_slot)))\n    queryInvalid := or(iszero(validatorAddress), isValidatorDisabled)\n}",
                  "src": "17728:1422:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 700,
                    "name": "queryInvalid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 697,
                    "src": "19275:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 718,
                  "nodeType": "IfStatement",
                  "src": "19271:231:3",
                  "trueBody": {
                    "id": 717,
                    "nodeType": "Block",
                    "src": "19289:213:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 702,
                                "name": "validatorAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 691,
                                "src": "19311:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "307830",
                                    "id": 704,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "19339:3:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0x0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 703,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "19331:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19331:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "19311:32:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6578706563746564207468652076616c696461746f72206164647265737320746f206578697374",
                              "id": 707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19345:41:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                                "typeString": "literal_string \"expected the validator address to exist\""
                              },
                              "value": "expected the validator address to exist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f7fa4b73a8b7411f17e71fcc1df97cc26eaddd1951d3fc34174684711f565dde",
                                "typeString": "literal_string \"expected the validator address to exist\""
                              }
                            ],
                            "id": 701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "19303:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19303:84:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "19303:84:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 711,
                                "name": "isValidatorDisabled",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 694,
                                "src": "19409:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "66616c7365",
                                "id": 712,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "19432:5:3",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "19409:28:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6578706563746564207468652076616c696461746f72206164647265737320746f206e6f742062652064697361626c6564",
                              "id": 714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "19439:51:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d16f7524b1ef4febf3375d751113e83ad41ea86aca368d1f448e6ee2a192cb5d",
                                "typeString": "literal_string \"expected the validator address to not be disabled\""
                              },
                              "value": "expected the validator address to not be disabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d16f7524b1ef4febf3375d751113e83ad41ea86aca368d1f448e6ee2a192cb5d",
                                "typeString": "literal_string \"expected the validator address to not be disabled\""
                              }
                            ],
                            "id": 710,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              6690,
                              6691
                            ],
                            "referencedDeclaration": 6691,
                            "src": "19401:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19401:90:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 716,
                        "nodeType": "ExpressionStatement",
                        "src": "19401:90:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Get the address of the relevant validator contract\n    * @param _proof unique identifier of a particular proof\n@return validatorAddress - the address of the validator contract",
            "id": 720,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValidatorAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 688,
                  "name": "_proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "17595:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 687,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "17595:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17594:15:3"
            },
            "returnParameters": {
              "id": 692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 691,
                  "name": "validatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 720,
                  "src": "17631:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17631:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17630:26:3"
            },
            "scope": 721,
            "src": "17566:1942:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 722,
        "src": "1290:18220:3"
      }
    ],
    "src": "0:19512:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.0",
  "updatedAt": "2020-07-07T03:22:24.547Z",
  "devdoc": {
    "author": "AZTEC",
    "details": "ACE validates the AZTEC protocol's family of zero-knowledge proofs, which enables     digital asset builders to construct fungible confidential digital assets according to the AZTEC token standard.  * Copyright 2020 Spilsbury Holdings Ltd  * Licensed under the GNU Lesser General Public Licence, Version 3.0 (the \"License\"); you may not use this file except in compliance with the License. * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details. * You should have received a copy of the GNU Lesser General Public License along with this program.  If not, see <https://www.gnu.org/licenses/>.*",
    "methods": {
      "burn(uint24,bytes,address)": {
        "details": "Burn AZTEC notes",
        "params": {
          "_proof": "the AZTEC proof object",
          "_proofData": "the burn proof construction data",
          "_proofSender": "the Ethereum address of the original transaction sender. It is explicitly assumed that       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running Unnamed param is the AZTEC zero-knowledge proof data"
        },
        "return": "two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the notes that were created. Returned so that a zkAsset can emit the appropriate events"
      },
      "clearProofByHashes(uint24,bytes32[])": {
        "details": "Clear storage variables set when validating zero-knowledge proofs.     The only address that can clear data from `validatedProofs` is the address that created the proof.     Function is designed to utilize [EIP-1283](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1283.md)     to reduce gas costs. It is highly likely that any storage variables set by `validateProof`     are only required for the duration of a single transaction.     E.g. a decentralized exchange validating a swap proof and sending transfer instructions to     two confidential assets.     This method allows the calling smart contract to recover most of the gas spent by setting `validatedProofs`",
        "params": {
          "_proof": "the AZTEC proof object",
          "_proofHashes": "dynamic array of proof hashes"
        }
      },
      "constructor": {
        "details": "contract constructor. Sets the owner of ACE*"
      },
      "createNoteRegistry(address,uint256,bool,bool)": {
        "details": "Default noteRegistry creation method. Doesn't take the id of the factory to use, but generates it based on defaults and on the passed flags.",
        "params": {
          "_canAdjustSupply": "- whether the noteRegistry can make use of minting and burning",
          "_canConvert": "- whether the noteRegistry can transfer value from private to public representation and vice versa",
          "_linkedTokenAddress": "- address of any erc20 linked token (can not be 0x0 if canConvert is true)",
          "_scalingFactor": "- defines the number of tokens that an AZTEC note value of 1 maps to."
        }
      },
      "createNoteRegistry(address,uint256,bool,bool,uint24)": {
        "details": "NoteRegistry creation method. Takes an id of the factory to use.",
        "params": {
          "_canAdjustSupply": "- whether the noteRegistry can make use of minting and burning",
          "_canConvert": "- whether the noteRegistry can transfer value from private to public representation and vice versa",
          "_factoryId": "- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)",
          "_linkedTokenAddress": "- address of any erc20 linked token (can not be 0x0 if canConvert is true)",
          "_scalingFactor": "- defines the number of tokens that an AZTEC note value of 1 maps to."
        }
      },
      "getCommonReferenceString()": {
        "details": "Returns the common reference string. We use a custom getter for `commonReferenceString` - the default getter created by making the storage variable public indexes individual elements of the array, and we want to return the whole array"
      },
      "getFactoryAddress(uint24)": {
        "details": "Get the factory address associated with a particular factoryId. Fail if resulting address is 0x0.",
        "params": {
          "_factoryId": "- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)"
        }
      },
      "getNote(address,bytes32)": {
        "details": "Returns the note for a given address and note hash.",
        "params": {
          "_noteHash": "- keccak256 hash of the note coordiantes (gamma and sigma)",
          "_registryOwner": "- address of the registry owner"
        },
        "return": "status - status of the note, details whether the note is in a note registry or has been destroyedcreatedOn - time the note was createddestroyedOn - time the note was destroyednoteOwner - address of the note owner"
      },
      "getRegistry(address)": {
        "details": "Returns the registry for a given address.",
        "params": {
          "_registryOwner": "- address of the registry owner in question"
        },
        "return": "linkedTokenAddress - public ERC20 token that is linked to the NoteRegistry. This is used to transfer public value into and out of the systemscalingFactor - defines how many ERC20 tokens are represented by one AZTEC notetotalSupply - represents the total current supply of public tokens associated with a particular registryconfidentialTotalMinted - keccak256 hash of the note representing the total minted supplyconfidentialTotalBurned - keccak256 hash of the note representing the total burned supplycanConvert - flag set by the owner to decide whether the registry has public to private, and vice versa, conversion privilegecanAdjustSupply - determines whether the registry has minting and burning privileges"
      },
      "getValidatorAddress(uint24)": {
        "details": "Get the address of the relevant validator contract",
        "params": {
          "_proof": "unique identifier of a particular proof"
        },
        "return": "validatorAddress - the address of the validator contract"
      },
      "incrementDefaultRegistryEpoch()": {
        "details": "Increment the default registry epoch"
      },
      "incrementLatestEpoch()": {
        "details": "Increments the `latestEpoch` storage variable."
      },
      "invalidateProof(uint24)": {
        "details": "Forever invalidate the given proof.",
        "params": {
          "_proof": "the AZTEC proof object"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "makeAssetAvailable(address)": {
        "details": "used for slow release, useless afterwards."
      },
      "mint(uint24,bytes,address)": {
        "details": "Mint AZTEC notes",
        "params": {
          "_proof": "the AZTEC proof object",
          "_proofData": "the mint proof construction data",
          "_proofSender": "the Ethereum address of the original transaction sender. It is explicitly assumed that       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running Unnamed param is the AZTEC zero-knowledge proof data"
        },
        "return": "two `bytes` objects. The first contains the new confidentialTotalSupply note and the second contains the notes that were created. Returned so that a zkAsset can emit the appropriate events"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "publicApprove(address,bytes32,uint256)": {
        "details": "Adds a public approval record to the noteRegistry, for use by ACE when it needs to transfer public tokens it holds to an external address. It needs to be associated with the hash of a proof."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setCommonReferenceString(bytes32[6])": {
        "details": "Set the common reference string.     If the trusted setup is re-run, we will need to be able to change the crs",
        "params": {
          "_commonReferenceString": "the new commonReferenceString"
        }
      },
      "setDefaultCryptoSystem(uint8)": {
        "details": "Set the default crypto system to be used",
        "params": {
          "_defaultCryptoSystem": "- default crypto system identifier"
        }
      },
      "setFactory(uint24,address)": {
        "details": "Register a new Factory, iff no factory for that ID exists. The epoch of any new factory must be at least as big as the default registry epoch. Each asset type for each cryptosystem for each epoch should have a note registry",
        "params": {
          "_factoryAddress": "- address of the deployed factory",
          "_factoryId": "- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)"
        }
      },
      "setProof(uint24,address)": {
        "details": "Adds or modifies a proof into the Cryptography Engine.      This method links a given `_proof` to a smart contract validator.",
        "params": {
          "_proof": "the AZTEC proof object",
          "_validatorAddress": "the address of the smart contract validator"
        }
      },
      "supplementTokens(uint256)": {
        "details": "called when a mintable and convertible asset wants to perform an action which puts the zero-knowledge and public balance out of balance. For example, if minting in zero-knowledge, some public tokens need to be added to the pool managed by ACE, otherwise any private->public conversion runs the risk of not having any public tokens to send.",
        "params": {
          "_value": "the value to be added"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateNoteRegistry(uint24,bytes,address)": {
        "details": "Update the state of the note registry according to transfer instructions issued by a zero-knowledge proof. This method will verify that the relevant proof has been validated, make sure the same proof has can't be re-used, and it then delegates to the relevant noteRegistry.",
        "params": {
          "_proof": "- unique identifier for a proof",
          "_proofOutput": "- transfer instructions issued by a zero-knowledge proof",
          "_proofSender": "- address of the entity sending the proof"
        }
      },
      "upgradeNoteRegistry(uint24)": {
        "details": "Method to upgrade the registry linked with the msg.sender to a new factory, based on _factoryId. The submitted _factoryId must be of epoch equal or greater than previous _factoryId, and of the same assetType.",
        "params": {
          "_factoryId": "- uint24 which contains 3 uint8s representing (epoch, cryptoSystem, assetType)"
        }
      },
      "validateProof(uint24,address,bytes)": {
        "details": "Validate an AZTEC zero-knowledge proof. ACE will issue a validation transaction to the smart contract     linked to `_proof`. The validator smart contract will have the following interface:    *      function validate(         bytes _proofData,         address _sender,         bytes32[6] _commonReferenceString     ) public returns (bytes)",
        "params": {
          "_proof": "the AZTEC proof object",
          "_sender": "the Ethereum address of the original transaction sender. It is explicitly assumed that       an asset using ACE supplies this field correctly - if they don't their asset is vulnerable to front-running Unnamed param is the AZTEC zero-knowledge proof data"
        },
        "return": "a `bytes proofOutputs` variable formatted according to the Cryptography Engine standard"
      },
      "validateProofByHash(uint24,bytes32,address)": {
        "details": "Validate a previously validated AZTEC proof via its hash     This enables confidential assets to receive transfer instructions from a dApp that     has already validated an AZTEC proof that satisfies a balancing relationship.",
        "params": {
          "_proof": "the AZTEC proof object",
          "_proofHash": "the hash of the `proofOutput` received by the asset",
          "_sender": "the Ethereum address of the contract issuing the transfer instruction"
        },
        "return": "a boolean that signifies whether the corresponding AZTEC proof has been validated"
      }
    },
    "title": "The AZTEC Cryptography Engine"
  },
  "userdoc": {
    "methods": {}
  }
}